{"version":3,"sources":["webpack:///src/app/modules/ams/security/components/security-reports/security-reports-data/security-reports-data.component.html","webpack:///src/app/modules/ams/security/components/security-reports/security-reports-data/security-reports-data.component.scss","webpack:///src/app/modules/ams/security/components/security-reports/security-reports-data/security-reports-data.component.ts"],"names":["SecurityReportsDataComponent","apartmentService","route","alertService","lookupService","sharedService","sessionService","pageName","allLink","ItemStartIndex","itemLimit","unitFieldType","unitOrder","isReportSubmitted","isDataLoaded","reportData","filterSelected","singleBlock","filterSelectedNote","singleNote","filterSelectedType","singleType","minDate","event","ItemEndIndex","filtergroup","jqx","filter","filter_or_operator","filtervalue","filtercondition","filterData","createfilter","operator","addfilter","datagrid","showfiltercolumnbackground","columnData","forEach","item","datafield","applyfilters","clearfilters","type","window","innerWidth","totalItems","date","add","timeZone","offset","format","time24","form","details","ApartmentBlockID","parseInt","report","apartmentBlockID","StartDate","getDateTime","startDate","EndDate","endDate","ApartmentID","apartmentId","EmergencyCategoryTypeID","emergencyCategoryTypeID","AlertTypeStatusID","alertTypeStatusID","getReportsForSecurityPanicAlertMultiFilter","subscribe","res","alertReportsDataList","i","sNo","gridSourceData","localdata","datatype","listData","dataAdapter","length","error","apartmentBlockId","lookupValueId","fromInput","goBack","matDrawer","close","exportdata","timezonecast","params","name","apartmentID","apartment_params","getApartmentBlockByApartmentId","blockData","sec_params","LookupTypeId","ApartmentId","getLookupValueByLookupTypeId","securityCategoryData","isActive","alert_params","alertTypeStatus","undefined","link","cellsrenderer","row","column","value","columnrenderer","text","width","pinned","renderer","getDate","minwidth","maxwidth","Date","time","removefilter","block","apartmentBlockNumber","note","lookupValueName","from","to","selector","template"],"mappings":"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","file":"default~modules-ams-dashboard-dashboard-module~modules-ams-security-security-module~modules-user-use~17bc8b87-es5.js","sourcesContent":["export default \"<div class=\\\"security-reports-data-wrapper\\\">\\n\\t\\t<mat-drawer-container class=\\\"example-container\\\" [hasBackdrop]=\\\"true\\\" #matDrawer>\\n\\t\\t\\t\\t<mat-drawer #filter mode=\\\"over\\\" position=\\\"end\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"helpdesk-filter-drawer p-5\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h4> Filter By </h4>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"ml-auto\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<button mat-icon-button (click)=\\\"goBack()\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon [svgIcon]=\\\"'close'\\\"></mat-icon>\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<div class=\\\"mt-3\\\">\\n\\t\\t\\t\\t\\t\\t\\t<form>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"filter-box cleafix\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"d-flex align-items-center mb-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-flat-button class=\\\"mr-3\\\" [ngClass]=\\\"filterSelected == 'all' ? 'mat-primary' : 'mat-lined'\\\" (click)=\\\"getAllBlockData('all')\\\">All\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tTowers</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-flat-button [ngClass]=\\\"filterSelected != 'all' ? 'mat-primary' : 'mat-lined'\\\" [matMenuTriggerFor]=\\\"singleBlockActions\\\">{{singleBlock}}</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-menu class=\\\"mat-actions-menu\\\" [xPosition]=\\\"'before'\\\" #singleBlockActions=\\\"matMenu\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-container *ngFor=\\\"let block of blockData\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-menu-item (click)=\\\"getSingleBlock(block)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{block.apartmentBlockNumber}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-menu>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"filter-box cleafix\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"d-flex align-items-center mb-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-flat-button class=\\\"mr-3\\\" [ngClass]=\\\"filterSelectedNote == 'all' ? 'mat-primary' : 'mat-lined'\\\" (click)=\\\"getAllNoteData('all')\\\">All\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tSubject</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-flat-button class=\\\"mr-3\\\" [ngClass]=\\\"filterSelectedNote != 'all' ? 'mat-primary' : 'mat-lined'\\\" [matMenuTriggerFor]=\\\"singleNoteActions\\\">{{singleNote}}</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-menu class=\\\"mat-actions-menu\\\" [xPosition]=\\\"'before'\\\" #singleNoteActions=\\\"matMenu\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-container *ngFor=\\\"let note of securityCategoryData\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-menu-item (click)=\\\"getSelectNote(note)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{note.lookupValueName}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-menu>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"filter-box cleafix mb-5\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"d-flex align-items-center mb-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-flat-button class=\\\"mr-3\\\" [ngClass]=\\\"filterSelectedType == 'all' ? 'mat-primary' : 'mat-lined'\\\" (click)=\\\"getAllTypeData('all')\\\">All\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tAlert</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-flat-button class=\\\"mr-3\\\" [ngClass]=\\\"filterSelectedType != 'all' ? 'mat-primary' : 'mat-lined'\\\" [matMenuTriggerFor]=\\\"singleTypeActions\\\">{{singleType}}</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-menu class=\\\"mat-actions-menu\\\" [xPosition]=\\\"'before'\\\" #singleTypeActions=\\\"matMenu\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-container *ngFor=\\\"let type of alertTypeStatus\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-menu-item (click)=\\\"getSelectType(type)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{type.lookupValueName}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-menu>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<app-datepicker\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tlabelText=\\\"Start Date\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tfieldName=\\\"startDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'null'\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"date\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldModel]=\\\"report.startDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(fieldParams)=\\\"getStartDate($event)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</app-datepicker>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<app-datepicker\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tlabelText=\\\"End Date\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tfieldName=\\\"endDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'null'\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"date\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldModel]=\\\"report.endDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(fieldParams)=\\\"getEndDate($event)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</app-datepicker>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"text-right\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" (click)=\\\"filterApply()\\\">Apply</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-button (click)=\\\"clearFilter()\\\">Cancel</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</mat-drawer>\\n\\t\\t\\t\\t<mat-drawer-content>\\n\\t<div class=\\\"main\\\">\\n\\t\\t<app-loader *ngIf=\\\"!isDataLoaded\\\"></app-loader>\\n\\n\\t\\t<ng-container *ngIf=\\\"isDataLoaded\\\"> \\n\\n\\t\\t\\t<condo-card *ngIf=\\\"!isReportSubmitted\\\">\\n\\t\\t\\t\\t<div CondoCardHeader>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"float-right\\\" *ngIf=\\\"!allLink\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" routerLink=\\\"/ams/security/reports\\\"  class=\\\"ml-auto my-auto\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon class=\\\"mr-2 ml-3\\\" svgIcon=\\\"heroicons_outline:document-report\\\"></mat-icon>All Reports\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t<h4>{{pageName}}</h4>\\n\\t\\t\\t\\t\\t\\t\\t<p>{{totalItems}} results</p>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<div class=\\\"ml-auto my-auto\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<app-table-search [input]=\\\"reportData\\\" (outputParams)=\\\"onGlSearchFilter($event)\\\"></app-table-search>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"mr-3 my-auto ml-3\\\">\\n\\t\\t\\t\\t\\t\\t\\t<app-print-dropdown (outputParams)=\\\"getPrintParams($event)\\\"></app-print-dropdown>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"d-md-block mr-3 my-auto ml-3\\\">\\n\\t\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'accent'\\\" (click)=\\\"filter.toggle()\\\" class=\\\"d-none d-md-block\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon class=\\\"mr-2\\\" svgIcon=\\\"heroicons_outline:filter\\\"></mat-icon>Filter\\n\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t<button class=\\\"d-block d-md-none table-add-btn\\\" mat-button (click)=\\\"filter.toggle()\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon [svgIcon]=\\\"'heroicons_outline:filter'\\\"></mat-icon>\\n\\t\\t\\t\\t\\t\\t\\t\\t  </button>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div CondoCardBody>\\n\\t\\t\\t\\t\\t<jqxGrid [theme]=\\\"'material'\\\" [width]=\\\"'100%'\\\" [rowsheight]=\\\"48\\\" [autoheight]=\\\"true\\\" [pageable]=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t[filterable]=\\\"true\\\" [sortable]=\\\"true\\\" [source]=\\\"listData\\\" [columns]=\\\"columnData\\\"\\n\\t\\t\\t\\t\\t\\t[columnsresize]=\\\"true\\\" [enablehover]=\\\"false\\\" #datagrid>\\n\\t\\t\\t\\t\\t</jqxGrid>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</condo-card>\\n\\n\\t\\t</ng-container>\\n\\t</div>\\n</mat-drawer-content>\\n</mat-drawer-container>\\n</div>\\n\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3NlY3VyaXR5L2NvbXBvbmVudHMvc2VjdXJpdHktcmVwb3J0cy9zZWN1cml0eS1yZXBvcnRzLWRhdGEvc2VjdXJpdHktcmVwb3J0cy1kYXRhLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { AlertService } from 'src/app/api/controllers/Alert';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\nimport { SessionService } from '../../../../../../core/session/session.service';\nimport { MatDrawer } from '@angular/material/sidenav';\n\nimport * as _ from 'underscore';\nimport * as moment from 'moment';\nimport _moment from \"moment-timezone\";\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\n\n@Component({\n  selector: 'app-security-reports-data',\n  templateUrl: './security-reports-data.component.html',\n  styleUrls: ['./security-reports-data.component.scss']\n})\nexport class SecurityReportsDataComponent implements OnInit {\n\n  blockData:any;\n  pageName:string = \"\";\n  report:any;\n\n  securityCategoryData: any;\n  alertTypeStatus: any;\n  allLink = false;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 8;\n\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = false;\n\n  isReportSubmitted:boolean = true;\n  isDataLoaded:boolean = false;\n\n  alertReportsDataList:any;\n  reportsData:any;\n  listData: any;\n  columnData:any;\n  gridSourceData:any;\n  reportData:any = \"\";\n  @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n  @ViewChild('matDrawer', {static: true}) matDrawer: MatDrawer;\n\n  filterSelected:string = \"all\";\n  singleBlock:string = \"Select Tower\";\n  filterSelectedNote:string = \"all\";\n  singleNote:string = \"Select Subject\";\n  filterSelectedType:string = \"all\";\n  singleType:string = \"Select Alert\";\n  selectedBlockId:number;\n  \n  timeZone:any;\n  minDate = null;\n\n  constructor(\n    private apartmentService:ApartmentService,\n    private route: ActivatedRoute, \n    private alertService:AlertService,\n  \tprivate lookupService:LookupService,\n    private sharedService: SharedService,\n    private sessionService: SessionService\n  ) { }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n\n  onGlSearchFilter(event) {\n    if(event != \"\"){\n  \n      let filtergroup = new jqx.filter();\n      let filter_or_operator = 1;\n      let filtervalue = event;\n      let filtercondition = 'contains';\n      let filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n      filtergroup.operator = 'or';\n      filtergroup.addfilter(filter_or_operator, filterData);\n    \n      this.datagrid.showfiltercolumnbackground(false);\n    \n      this.columnData.forEach(item => {\n        if(item.datafield != 'Actions') {\n        this.datagrid.addfilter(item.datafield, filtergroup, true);\n        }\n      })\n    \n      this.datagrid.applyfilters();\n      \n      }\n      else {\n      this.datagrid.clearfilters();\n      }\n     }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'desc' : 'asc';\n    }\n    else return '';\n  }\n\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  isItemsAvailable(){\n    return this.totalItems > 0 ? true : false;\n  }\n\n  isNoItemsAvailable(){\n    return this.totalItems == 0 ? true : false;\n  }\n\n  getDate(date){\n    return moment(date).add(this.timeZone.offset, 'hours').format(this.timeZone.date);\n  }\n\n  getDateTime(date){\n    return moment(date).format(this.timeZone.time24);\n  }\n\n  submitSecurityAlertReports(form) {\n  \tthis.isReportSubmitted = true;\n    this.isDataLoaded = false;\n\n  \tlet details = {\n  \t  ApartmentBlockID: parseInt(this.report.apartmentBlockID),\n  \t  StartDate: this.getDateTime(this.report.startDate),\n  \t  EndDate: this.getDateTime(this.report.endDate),\n      ApartmentID: this.sessionService.apartmentId,\n      EmergencyCategoryTypeID: parseInt(this.report.emergencyCategoryTypeID),\n      AlertTypeStatusID: parseInt(this.report.alertTypeStatusID)\n    }\n\n\n  \tthis.alertService.getReportsForSecurityPanicAlertMultiFilter(details).subscribe((res:any) => {\n\n      this.alertReportsDataList = res; \n\n      this.alertReportsDataList.forEach((item, i) =>{\n        item.sNo = i+1;\n      })\n      \n      this.gridSourceData = {\n        localdata: this.alertReportsDataList,\n        datatype: \"array\"\n      }\n  \n      this.listData = new jqx.dataAdapter(this.gridSourceData);\n      \n      this.totalItems = this.alertReportsDataList.length;\n\n\t\tif(this.totalItems>this.itemLimit){\n\t\t\tthis.ItemEndIndex = this.itemLimit;\n\t\t}\n\t\telse {\n\t\t\tthis.ItemEndIndex = this.totalItems;\n\t\t}\n\n\t\tthis.isDataLoaded = true;\n\t\tthis.isReportSubmitted = false;\n\n    },\n    error => {\n\n    });\n\n  }\n\n  getSelectedBlock(event) {\n    this.report.apartmentBlockID = event[0].apartmentBlockId;\n  }\n\n  getSelectedEmergency(event) {\n    this.report.emergencyCategoryTypeID = event[0].lookupValueId;\n  }\n\n  getSelectedAlert(event) {\n    this.report.alertTypeStatusID = event[0].lookupValueId;\n  }\n\n  getStartDate(event) {\n    this.report.startDate = event;\n    this.fromInput();\n  }\n\n  getEndDate(event) {\n    this.report.endDate = event;\n    this.fromInput();\n  }\n\n  filterApply() {\n    this.goBack();\n    this.isDataLoaded = false;\n    let details = {\n  \t  ApartmentBlockID: parseInt(this.report.apartmentBlockID),\n  \t  StartDate: this.getDateTime(this.report.startDate),\n  \t  EndDate: this.getDateTime(this.report.endDate),\n      ApartmentID: parseInt(this.sessionService.apartmentId),\n      EmergencyCategoryTypeID: parseInt(this.report.emergencyCategoryTypeID),\n      AlertTypeStatusID: parseInt(this.report.alertTypeStatusID)\n    }\n\n\n  \tthis.alertService.getReportsForSecurityPanicAlertMultiFilter(details).subscribe((res:any) => {\n\n      this.alertReportsDataList = res; \n\n      this.alertReportsDataList.forEach((item, i) =>{\n        item.sNo = i+1;\n      })\n      \n      this.gridSourceData = {\n        localdata: this.alertReportsDataList,\n        datatype: \"array\"\n      }\n  \n      this.listData = new jqx.dataAdapter(this.gridSourceData);\n      \n      this.totalItems = this.alertReportsDataList.length;\n\n\t\tif(this.totalItems>this.itemLimit){\n\t\t\tthis.ItemEndIndex = this.itemLimit;\n\t\t}\n\t\telse {\n\t\t\tthis.ItemEndIndex = this.totalItems;\n\t\t}\n\n\t\tthis.isDataLoaded = true;\n\t\tthis.isReportSubmitted = false;\n\n    },\n    error => {\n      this.isDataLoaded = true;\n      this.isReportSubmitted = false;\n    });\n\n\n  }\n\n  clearFilter() {\n    this.report.apartmentBlockID = null;\n    this.report.emergencyCategoryTypeID = null;\n    this.report.alertTypeStatusID = null;\n    this.report.startDate = null;\n    this.report.endDate = null;\n    this.minDate = null;\n\n    // =this.getTicketByAdmin();\n    let details = {\n  \t  ApartmentBlockID: parseInt(this.report.apartmentBlockID),\n  \t  StartDate: this.getDateTime(this.report.startDate),\n  \t  EndDate: this.getDateTime(this.report.endDate),\n      ApartmentID: parseInt(this.sessionService.apartmentId),\n      EmergencyCategoryTypeID: parseInt(this.report.emergencyCategoryTypeID),\n      AlertTypeStatusID: parseInt(this.report.alertTypeStatusID)\n    }\n\n\n  \tthis.alertService.getReportsForSecurityPanicAlertMultiFilter(details).subscribe((res:any) => {\n\n      this.alertReportsDataList = res; \n\n      this.alertReportsDataList.forEach((item, i) =>{\n        item.sNo = i+1;\n      })\n      \n      this.gridSourceData = {\n        localdata: this.alertReportsDataList,\n        datatype: \"array\"\n      }\n  \n      this.listData = new jqx.dataAdapter(this.gridSourceData);\n      \n      this.totalItems = this.alertReportsDataList.length;\n\n\t\tif(this.totalItems>this.itemLimit){\n\t\t\tthis.ItemEndIndex = this.itemLimit;\n\t\t}\n\t\telse {\n\t\t\tthis.ItemEndIndex = this.totalItems;\n\t\t}\n\n\t\tthis.isDataLoaded = true;\n\t\tthis.isReportSubmitted = false;\n\n    },\n    error => {\n      this.isDataLoaded = true;\n      this.isReportSubmitted = false;\n    });\n\n    this.goBack();\n  }\n\n  goBack() {\n    this.matDrawer.close();\n  }\n\n  getPrintParams(event){\n    this.datagrid.exportdata(event, 'SecurityReportsData');\n    }\n  \n\n  ngOnInit() {\n\n    this.sharedService.timezonecast.subscribe( timeZone => this.timeZone = timeZone )\n\n    this.pageName = this.route.params['value'].name;\n  \tthis.report = {};\n    this.report.apartmentID = \"\";\n  \tthis.report.apartmentBlockID = \"\";\n    this.report.emergencyCategoryTypeID = \"\";\n    this.report.alertTypeStatusID = \"\";\n    this.report.startDate = null;\n    this.report.endDate = null;\n    let apartment_params = {\n      apartmentId: parseInt(this.sessionService.apartmentId)\n    }\n  \tthis.apartmentService.getApartmentBlockByApartmentId(apartment_params).subscribe((res:any) => {\n      this.blockData = res;\n    });\n    let sec_params = {\n      LookupTypeId: 29,\n      ApartmentId: this.sessionService.apartmentId\n    }\n    this.lookupService.getLookupValueByLookupTypeId(sec_params).subscribe((res:any) => {\n      this.securityCategoryData = res.filter(item => {\n          return item.isActive;\n      });\n\n    });\n    let alert_params = {\n      LookupTypeId: 30,\n      ApartmentId: this.sessionService.apartmentId\n    }\n    this.lookupService.getLookupValueByLookupTypeId(alert_params).subscribe((res:any) => {\n      this.alertTypeStatus = res.filter(item => {\n          return item.isActive;\n      });\n\n    });\n\n    this.report.alertTypeStatusID = this.route.params['value'].type === undefined ? \"\" : this.route.params['value'].type;\n\n    this.allLink = this.route.params['value'].link;\n    var cellsrenderer = (row, column, value) => {\n      return '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n    }\n\n    var columnrenderer = (value) => {\n      return '<div style=\"padding: 14px\">' + value + '</div>';\n    }\n\n\n    this.columnData = [{\n         text: 'S.No',\n         datafield: 'sNo',\n         width: 100,\n         pinned: true,\n         cellsrenderer: cellsrenderer,\n         renderer: columnrenderer\n      }, {\n          text: 'Creation Date',\n          datafield: 'creationDate',\n          width: 200,\n          cellsrenderer: (row, column, value) => {\n            return '<div class=\"jqx-custom-inner-cell\">'+ this.getDate(value) +'</div>'\n          },\n          renderer: columnrenderer\n      },{\n         text: 'Unit No',\n         datafield: 'unitNo',\n         cellsrenderer: cellsrenderer,\n         minwidth: 80,\n         maxwidth: 160,\n         renderer: columnrenderer\n     }, {\n         text: 'Tower',\n         datafield: 'blockNo',\n         cellsrenderer: cellsrenderer,\n         minwidth: 120,\n         maxwidth: 180,\n         renderer: columnrenderer\n     }, {\n         text: 'Category',\n         datafield: 'category',\n         cellsrenderer: cellsrenderer,\n         minwidth: 120,\n         maxwidth: 180,\n         renderer: columnrenderer\n     }, {\n         text: 'Subject',\n         datafield: 'notes',\n         cellsrenderer: cellsrenderer,\n         minwidth: 120,\n         maxwidth: 180,\n         renderer: columnrenderer\n     }, {\n         text: 'Status',\n         datafield: 'alertStatus',\n         cellsrenderer: cellsrenderer,\n         minwidth: 120,\n         maxwidth: 150,\n         renderer: columnrenderer \n     }];\n\n\n\n     let details = {\n  \t  ApartmentBlockID: parseInt(this.report.apartmentBlockID),\n  \t  StartDate: this.report.startDate === null ? moment(new Date(\"2020-01-01\")).format(\"MM/DD/YYYY hh:mm aa\") : this.getDateTime(this.report.startDate),\n      EndDate: this.report.endDate === null ? moment(new Date()).format(this.timeZone.time) : this.getDateTime(this.report.endDate),\n      ApartmentID: parseInt(this.sessionService.apartmentId),\n      EmergencyCategoryTypeID: parseInt(this.report.emergencyCategoryTypeID),\n      AlertTypeStatusID: parseInt(this.report.alertTypeStatusID)\n    }\n\n\n  \tthis.alertService.getReportsForSecurityPanicAlertMultiFilter(details).subscribe((res:any) => {\n\n      this.alertReportsDataList = res; \n\n      this.alertReportsDataList.forEach((item, i) =>{\n        item.sNo = i+1;\n      })\n      \n      this.gridSourceData = {\n        localdata: this.alertReportsDataList,\n        datatype: \"array\"\n      }\n  \n      this.listData = new jqx.dataAdapter(this.gridSourceData);\n      \n      this.totalItems = this.alertReportsDataList.length;\n\n\t\tif(this.totalItems>this.itemLimit){\n\t\t\tthis.ItemEndIndex = this.itemLimit;\n\t\t}\n\t\telse {\n\t\t\tthis.ItemEndIndex = this.totalItems;\n\t\t}\n\n\t\tthis.isDataLoaded = true;\n\t\tthis.isReportSubmitted = false;\n\n    },\n    error => {\n      this.isDataLoaded = true;\n      this.isReportSubmitted = false;\n    });\n\n\n\n  }\n\n  getAllBlockData(){\n\n\t\tthis.filterSelected = 'all';\n\t  this.singleBlock = \"Select Tower\";\n\t  \n\t  this.report.apartmentBlockID = \"\";\n\t  this.datagrid.removefilter('blockNo', true);\n  \n\t}\n\n\tgetSingleBlock(block){\n  \t\n\t\tthis.filterSelected = 'single';\n\t\tthis.singleBlock = block.apartmentBlockNumber;\n\t\tthis.report.apartmentBlockID = block.apartmentBlockId;\n\n\t\tlet filtergroup = new jqx.filter();\n\t\t\tlet filter_or_operator = 1;\n\t\t\tlet filtervalue = this.singleBlock;\n\t\t\tlet filtercondition = 'contains';\n\t\t\tlet filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n\t\t\tfiltergroup.operator = 'and';\n\t\t\tfiltergroup.addfilter(filter_or_operator, filterData);\n\t  \n\t\t\tthis.datagrid.showfiltercolumnbackground(false);\n\t  \n\t\t\tthis.columnData.forEach(item => {\n\t\t\t  if(item.datafield === 'blockNo') {\n\t\t\t\tthis.datagrid.addfilter(item.datafield, filtergroup, true);\n\t\t\t  }\n\t\t\t})\n\t  \n\t\t\tthis.datagrid.applyfilters();\n  \n\t\n  \n  }\n\n  getAllNoteData(){\n\n\t\tthis.filterSelectedNote = 'all';\n\t  this.singleNote = \"Select Subject\";\n\t  \n\t  this.report.emergencyCategoryTypeID = \"\";\n    // this.datagrid.clearfilters();\n    this.datagrid.removefilter('notes', true);\n  \n\t}\n  \n  getSelectNote(note){\n    this.filterSelectedNote = 'single';\n\t\tthis.singleNote = note.lookupValueName;\n\t\tthis.report.emergencyCategoryTypeID = note.lookupValueId;\n\n\t\tlet filtergroup = new jqx.filter();\n\t\t\tlet filter_or_operator = 1;\n\t\t\tlet filtervalue = this.singleNote;\n\t\t\tlet filtercondition = 'contains';\n\t\t\tlet filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n\t\t\tfiltergroup.operator = 'and';\n\t\t\tfiltergroup.addfilter(filter_or_operator, filterData);\n\t  \n\t\t\tthis.datagrid.showfiltercolumnbackground(false);\n\t  \n\t\t\tthis.columnData.forEach(item => {\n\t\t\t  if(item.datafield === 'notes') {\n\t\t\t\tthis.datagrid.addfilter(item.datafield, filtergroup, true);\n\t\t\t  }\n\t\t\t})\n\t  \n\t\t\tthis.datagrid.applyfilters();\n  \n  }\n\n\n  getAllTypeData(){\n\t\tthis.filterSelectedType = 'all';\n\t  this.singleType = \"Select Alert\";\n\t  this.report.alertTypeStatusID = \"\";\n\t  this.datagrid.removefilter('alertStatus', true);\n\t}\n\n\n  getSelectType(note){\n    this.filterSelectedType = 'single';\n\t\tthis.singleType = note.lookupValueName;\n\t\tthis.report.alertTypeStatusID = note.lookupValueId;\n\n\t\tlet filtergroup = new jqx.filter();\n\t\t\tlet filter_or_operator = 1;\n\t\t\tlet filtervalue = this.singleNote;\n\t\t\tlet filtercondition = 'contains';\n\t\t\tlet filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n\t\t\tfiltergroup.operator = 'and';\n\t\t\tfiltergroup.addfilter(filter_or_operator, filterData);\n\t  \n\t\t\tthis.datagrid.showfiltercolumnbackground(false);\n\t  \n\t\t\tthis.columnData.forEach(item => {\n\t\t\t  if(item.datafield === 'alertStatus') {\n\t\t\t\tthis.datagrid.addfilter(item.datafield, filtergroup, true);\n\t\t\t  }\n\t\t\t})\n\t  \n\t\t\tthis.datagrid.applyfilters();\n  \n  }\n\n  fromInput(){\n    let from = new Date(this.report.startDate);\n    let to = new Date(this.report.endDate);\n    if (from > to) {\n      this.report.endDate = '';\n    }\n    this.minDate = new Date(this.report.startDate);\n  }\n\n  \n\n}\n"]}