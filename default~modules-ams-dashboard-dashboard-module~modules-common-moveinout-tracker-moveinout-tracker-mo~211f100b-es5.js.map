{"version":3,"sources":["webpack:///src/app/modules/common/moveinout-tracker/components/movein-reports/movein-report-data/movein-report-data.component.html","webpack:///src/app/modules/common/moveinout-tracker/components/movein-reports/movein-report-data/movein-report-data.component.scss","webpack:///src/app/modules/common/moveinout-tracker/components/movein-reports/movein-report-data/movein-report-data.component.ts"],"names":["MoveinReportDataComponent","route","apartmentService","moveInOutService","sharedService","sessionService","pageName","isDataLoaded","blockId","blockNo","end_date","start_date","visitTypeId","reportData","isReportSubmitted","filterSelected","singleBlock","allLink","window","innerWidth","event","datagrid","exportdata","matDrawer","close","date","add","timeZone","offset","format","params","ApartmentID","parseInt","apartmentId","ApartmentBlockID","StartDate","getDate","EndDate","getDetails","serviceName","id","name_","name","MoveInStatusID","getReportsForMoveInUsersMultiFilter","MoveOutStatusID","getReportsForMoveOutUsersMultiFilter","getReportsForMoveInDelayedUsersMultiFilter","getReportsForMoveOutDelayedUsersMultiFilter","subscribe","res","errorMessage","reportsDataList","totalItems","length","gridSourceData","localdata","datatype","listData","jqx","dataAdapter","error","val","filtergroup","filter","filter_or_operator","filtervalue","filtercondition","filterData","createfilter","operator","addfilter","showfiltercolumnbackground","columnData","forEach","item","datafield","applyfilters","clearfilters","form","reset","apartmentBlockId","lookupValueId","goBack","myForm","subtract","startOf","timezonecast","title","undefined","link","unitBlockParams","getApartmentBlockByApartmentId","unitBlocksData","visitParams","ApartmentId","LookupTypeId","cellsrenderer","row","column","value","columnrenderer","text","minwidth","pinned","renderer","maxwidth","getExpectedDate","obj","push","fromDate","endOf","time","toDate","block","apartmentBlockNumber","selector","template"],"mappings":"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","file":"default~modules-ams-dashboard-dashboard-module~modules-common-moveinout-tracker-moveinout-tracker-mo~211f100b-es5.js","sourcesContent":["export default \"<div class=\\\"user-report-data-wrapper content-layout right-sidebar-fullheight-basic-inner-scroll\\\">\\n\\t<mat-drawer-container class=\\\"example-container\\\" [hasBackdrop]=\\\"true\\\" #matDrawer>\\n\\t\\t<mat-drawer class=\\\"col-lg-3 col-md-3 col-sm-3 col-xs-3 p-0\\\" #filter mode=\\\"over\\\" position=\\\"end\\\">\\n\\t\\t\\t<div class=\\\"helpdesk-filter-drawer p-5\\\">\\n\\t\\t\\t\\t<div class=\\\"title row\\\">\\n\\t\\t\\t\\t\\t<h4> Filter By </h4>\\n\\t\\t\\t\\t\\t<div class=\\\"ml-auto\\\">\\n\\t\\t\\t\\t\\t\\t<button mat-icon-button (click)=\\\"goBack()\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-icon [svgIcon]=\\\"'close'\\\"></mat-icon>\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<condo-card>\\n\\t\\t\\t\\t\\t<div CondoCardHeader>\\n\\t\\t\\n\\t\\t\\t\\t\\t\\t<form #f=\\\"ngForm\\\">\\n\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"filter-box cleafix\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"d-flex align-items-center mb-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-flat-button class=\\\"mr-3\\\" [ngClass]=\\\"filterSelected == 'all' ? 'mat-primary' : 'mat-lined'\\\" (click)=\\\"getAllBlockData('all')\\\">All\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tTowers</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-flat-button [ngClass]=\\\"filterSelected != 'all' ? 'mat-primary' : 'mat-lined'\\\" [matMenuTriggerFor]=\\\"singleBlockActions\\\">{{singleBlock}}</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-menu class=\\\"mat-actions-menu\\\" [xPosition]=\\\"'before'\\\" #singleBlockActions=\\\"matMenu\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-container *ngFor=\\\"let block of unitBlocksData\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-menu-item (click)=\\\"getSingleBlock(block)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{block.apartmentBlockNumber}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-menu>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\n\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- <div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<condo-select labelText=\\\"Tower No\\\" fieldPlaceholder=\\\"Select Tower\\\" [fieldRequired]=\\\"'required'\\\" [fieldList]=\\\"unitBlocksData\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t fieldValue=\\\"apartmentBlockNumber\\\" [fieldModel]=\\\"blockId\\\" fieldId=\\\"apartmentBlockId\\\" (fieldParams)=\\\"getSelectedBlock($event)\\\"></condo-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> -->\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<app-datepicker\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tlabelText=\\\"Start Date\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tfieldName=\\\"startDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"date\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldModel]=\\\"start_date\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(fieldParams)=\\\"getStartDate($event)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</app-datepicker>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<app-datepicker\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tlabelText=\\\"End Date\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tfieldName=\\\"endDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"date\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldModel]=\\\"end_date\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(fieldParams)=\\\"getEndDate($event)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</app-datepicker>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"text-right mt-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" (click)=\\\"filterApply()\\\">Apply</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-button (click)=\\\"clearFilter()\\\">Cancel</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\n\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</condo-card>\\n\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t</mat-drawer>\\n\\t\\t<mat-drawer-content>\\n\\t\\t\\t<div class=\\\"main\\\">\\n\\t\\n\\t<ng-container>\\n\\t\\t<app-loader *ngIf=\\\"!isDataLoaded\\\"></app-loader>\\n\\n\\t\\t\\n\\t\\n\\n\\t\\t<condo-card *ngIf=\\\"isDataLoaded\\\">\\n\\t\\t\\t<div CondoCardHeader>\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"float-right\\\" *ngIf=\\\"!allLink\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" routerLink=\\\"/ams/moveinout-tracker/reports\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon class=\\\"mr-2 ml-3\\\" svgIcon=\\\"heroicons_outline:document-report\\\"></mat-icon>All Reports\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t<h5>{{pageName}}</h5>\\n\\t\\t\\t\\t\\t\\t<p>{{totalItems}} results</p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"ml-auto  my-auto\\\">\\n\\t\\t\\t\\t\\t\\t\\t<app-table-search [input]=\\\"reportData\\\" (outputParams)=\\\"onGlSearchFilter($event)\\\"></app-table-search>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"mr-3 my-auto ml-3\\\">\\n\\t\\t\\t\\t\\t\\t<app-print-dropdown (outputParams)=\\\"getPrintParams($event)\\\"></app-print-dropdown>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"mr-3 my-auto ml-3\\\">\\n\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'accent'\\\" (click)=\\\"filter.toggle()\\\" class=\\\"d-none d-md-block\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-icon class=\\\"mr-2\\\" svgIcon=\\\"heroicons_outline:filter\\\"></mat-icon>Filter\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t<button class=\\\"d-block d-md-none table-add-btn\\\" mat-button (click)=\\\"filter.toggle()\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon [svgIcon]=\\\"'heroicons_outline:filter'\\\"></mat-icon>\\n\\t\\t\\t\\t\\t\\t\\t  </button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div CondoCardBody>\\n\\t\\t\\t\\t<jqxGrid [theme]=\\\"'material'\\\" [width]=\\\"'100%'\\\" [rowsheight]=\\\"48\\\" [autoheight]=\\\"true\\\" [pageable]=\\\"true\\\"\\n\\t\\t\\t\\t\\t[filterable]=\\\"true\\\" [sortable]=\\\"true\\\" [source]=\\\"listData\\\" [columns]=\\\"columnData\\\"\\n\\t\\t\\t\\t\\t[columnsresize]=\\\"true\\\" [enablehover]=\\\"false\\\" #datagrid>\\n\\t\\t\\t\\t</jqxGrid>\\n\\t\\t\\t</div>\\n\\n\\t\\t</condo-card>\\n\\n\\t</ng-container>\\n</div>\\n</mat-drawer-content>\\n</mat-drawer-container>\\n\\t\\n\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tbW9uL21vdmVpbm91dC10cmFja2VyL2NvbXBvbmVudHMvbW92ZWluLXJlcG9ydHMvbW92ZWluLXJlcG9ydC1kYXRhL21vdmVpbi1yZXBvcnQtZGF0YS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\nimport { MoveInOutService } from 'src/app/api/controllers/MoveInOut';\nimport { MatDrawer } from '@angular/material/sidenav';\nimport { SessionService } from 'src/app/core/session/session.service';\n\nimport * as _ from 'underscore';\nimport * as moment from 'moment';\nimport _moment from \"moment-timezone\";\nimport { NgForm } from '@angular/forms';\n\n@Component({\n\tselector: 'app-movein-report-data',\n\ttemplateUrl: './movein-report-data.component.html',\n\tstyleUrls: ['./movein-report-data.component.scss']\n})\nexport class MoveinReportDataComponent implements OnInit {\n\n\tpageName: string = \"\";\n    reportsDataList: any;\n    visitorReportData: any;\n    totalItems: any;\n    isDataLoaded: boolean = false;\n    unitBlocksData: any;\n    blockId = null;\n    blockNo: string = \"\";\n    end_date = null;\n    start_date = null;\n    visitByData: any;\n    visitTypeId = null;\n    listData: any;\n    columnData:any;\n    gridSourceData:any;\n    reportData:any = \"\";\n    isReportSubmitted:boolean = false;\n    @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n    @ViewChild('matDrawer', {static: true}) matDrawer: MatDrawer;\n\n    filterSelected:string = \"all\";\n\t  singleBlock:string = \"Select Tower\";\n    selectedBlockId:number;\n    \n    timeZone:any;\n\n    fromDate:any;\n    toDate:any;\n    @ViewChild('f') myForm: NgForm;\n\n    allLink: boolean = false;\n    \n    constructor(\n        private route: ActivatedRoute, \n        private apartmentService: ApartmentService,\n        private moveInOutService: MoveInOutService, \n        private sharedService: SharedService, \n        private sessionService: SessionService) \n        { }\n    \n    \n    isMobileView() {\n        return window.innerWidth <= 767 ? 'table-responsive' : '';\n    }\n\n    getPrintParams(event){\n        this.datagrid.exportdata(event, 'MoveinReportData');\n      }\n    \n      goBack() {\n        this.matDrawer.close();\n      }\n    \n    getDate(date) {\n        return moment(date).add(this.timeZone.offset, 'hours').format(this.timeZone.date);\n    }\n\n    getStartDate(event) {\n      this.start_date = event\n    }\n\n    getEndDate(event) {\n      this.end_date = event\n    }\n    \n    submitReportsFilterForm() {\n        let params = {\n            ApartmentID : parseInt(this.sessionService.apartmentId),\n            ApartmentBlockID : parseInt(this.blockId),\n            StartDate : this.getDate(this.start_date),\n\t\t\t      EndDate : this.getDate(this.end_date)\n\t\t    }\n        this.getDetails(params);\n    }\n\n    getDetails(params){    \n        let serviceName;\n        \n\t\tlet id = parseInt(this.route.params['value'].id);\n\t\tlet name_ = this.route.params['value'].name;\n        if(id == 372){\n\t\t\tparams.MoveInStatusID = id;\n            serviceName = this.moveInOutService.getReportsForMoveInUsersMultiFilter(params)\n        }else if(id == 373){\n\t\t\t params.MoveOutStatusID = id;\n            serviceName = this.moveInOutService.getReportsForMoveOutUsersMultiFilter(params)\n        }else if(id == 374){\n\t\t\tparams.MoveInStatusID = id;\n            serviceName = this.moveInOutService.getReportsForMoveInUsersMultiFilter(params)\n        }else if(name_ == \"rejectedmoveout\"){\n\t\t\tparams.MoveOutStatusID = id;\n            serviceName = this.moveInOutService.getReportsForMoveOutUsersMultiFilter(params)\n        }\n        else if(name_ == \"moveout\"){\n\t\t\tparams.MoveOutStatusID = id;\n            serviceName = this.moveInOutService.getReportsForMoveOutUsersMultiFilter(params)\n        } else if(name_ == 'moveinusers'){\n\t\t\tparams.MoveInStatusID = id;\n            serviceName = this.moveInOutService.getReportsForMoveInUsersMultiFilter(params)\n        }\n        else if(name_ == 'cancelledmovein'){\n\t\t\tparams.MoveInStatusID = id;\n            serviceName = this.moveInOutService.getReportsForMoveInUsersMultiFilter(params)\n        }\n        else if(name_ == 'delayedMoveIn'){\n            serviceName = this.moveInOutService.getReportsForMoveInDelayedUsersMultiFilter(params)\n        }else if(name_ == 'delayedMoveOut'){\n            serviceName = this.moveInOutService.getReportsForMoveOutDelayedUsersMultiFilter(params)\n        }\n        serviceName.subscribe((res:any) => {\n              \n            if(res.errorMessage){\n\t\t\tthis.reportsDataList = [];\n\t\t\tthis.totalItems =  this.reportsDataList.length;\n             \n          }else{\n            this.reportsDataList = res;\n            this.totalItems =  this.reportsDataList.length;     \n           this.gridSourceData = {\n            localdata: this.reportsDataList,\n            datatype: \"array\"\n          }\n        \n          this.listData = new jqx.dataAdapter(this.gridSourceData);\n          this.isReportSubmitted = true;\n          this.isDataLoaded = true;\n          }},\n          error => {\n\n            this.isReportSubmitted = true;\n          this.isDataLoaded = true;\n                });\n    \n    }\n\n    getExpectedDate(val){\n        if(val != ''){\n          return moment(val).format(\"MM/DD/YYYY\")\n        }else{\n          return ''\n        }\n      }\n\n      onGlSearchFilter(event) {\n        if(event != \"\"){\n      \n          let filtergroup = new jqx.filter();\n          let filter_or_operator = 1;\n          let filtervalue = event;\n          let filtercondition = 'contains';\n          let filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n          filtergroup.operator = 'or';\n          filtergroup.addfilter(filter_or_operator, filterData);\n        \n          this.datagrid.showfiltercolumnbackground(false);\n        \n          this.columnData.forEach(item => {\n            if(item.datafield != 'Actions') {\n            this.datagrid.addfilter(item.datafield, filtergroup, true);\n            }\n          })\n        \n          this.datagrid.applyfilters();\n          \n          }\n          else {\n          this.datagrid.clearfilters();\n          }\n         }\n\n    \n      cancel(form){\n          form.reset();\n     }\n\n   \n\n      getSelectedBlock(event) {\n        this.blockId = event[0].apartmentBlockId;\n      }\n\n      getSelectedVisit(event) {\n        this.visitTypeId = event[0].lookupValueId;\n      }\n    \n      filterApply() {\n        this.goBack();\n        this.isDataLoaded = false;\n        let params = {\n            ApartmentID : parseInt(this.sessionService.apartmentId),\n            ApartmentBlockID : parseInt(this.blockId),\n            StartDate : this.getDate(this.start_date),\n\t\t\t      EndDate : this.getDate(this.end_date)\n\t\t    }\n        this.getDetails(params);\n        \n      }\n    \n      clearFilter() {\n        \n        this.myForm.form.reset();\n        this.blockId = null;\n     this.start_date = null;\n     this.end_date = null;\n     this.datagrid.clearfilters();\n     \n        // =this.getTicketByAdmin();\n        let params = {\n            ApartmentID : parseInt(this.sessionService.apartmentId),\n            ApartmentBlockID : parseInt(this.blockId),\n            StartDate : this.start_date === null ? moment().subtract(5,'months').startOf('month').add(this.timeZone.offset, 'hours').format(this.timeZone.date) : this.getDate(this.start_date),\n        EndDate : this.end_date === null ? moment().add(this.timeZone.offset, 'hours').format(this.timeZone.date) : this.getDate(this.end_date)\n\t\t    }\n        this.getDetails(params);\n        this.goBack();\n      }\n    \n    ngOnInit() {\n\n      this.sharedService.timezonecast.subscribe( timeZone => this.timeZone = timeZone )\n\n        this.pageName = this.route.params['value'].title === undefined ? this.route.params['value'].name : this.route.params['value'].title;\n        this.allLink = this.route.params['value'].link;\n        let unitBlockParams = {\n            apartmentId: parseInt(this.sessionService.apartmentId)\n        };\n        this.apartmentService.getApartmentBlockByApartmentId(unitBlockParams).subscribe((res: any) => {\n            this.unitBlocksData = res;\n        });\n        let visitParams = {\n            ApartmentId: this.sessionService.apartmentId,\n            LookupTypeId: 15\n        }\n        \n        this.isDataLoaded = false;\n\n        var cellsrenderer = (row, column, value) => {\n            return '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n          }\n      \n          var columnrenderer = (value) => {\n            return '<div style=\"padding: 14px\">' + value + '</div>';\n          }\n      \n      \n          this.columnData = [{\n               text: 'Resident Name',\n               datafield: 'residentName',\n               cellsrenderer: cellsrenderer,\n               minwidth: 120,\n               pinned: true,\n               renderer: columnrenderer\n           },{\n                text: 'Unit No',\n                datafield: 'unitNo',\n                minwidth: 80,\n                cellsrenderer: cellsrenderer,\n                renderer: columnrenderer\n            },{\n               text: 'Tower No',\n               datafield: 'blockNo',\n               cellsrenderer: cellsrenderer,\n               minwidth: 100,\n               renderer: columnrenderer\n           },  {\n               text: 'Owner/Tenant',\n               datafield: 'ownerorTenant',\n               cellsrenderer: cellsrenderer,\n               minwidth: 130,\n               renderer: columnrenderer\n           }, {\n               text: 'Resident Contact Number',\n               datafield: 'residentContactNumber',\n               cellsrenderer: cellsrenderer,\n               minwidth: 220,\n               maxwidth: 250,\n               renderer: columnrenderer\n\t\t\t},{\n\t\t\t\ttext: 'No of Occupants',\n\t\t\t\tdatafield: 'noOfOccupants',\n\t\t\t\tcellsrenderer: cellsrenderer,\n                minwidth: 130,\n                maxwidth: 150,\n\t\t\t\trenderer: columnrenderer \n\t\t\t}, {\n                text: 'Expected Date',\n                datafield: 'expectedDate',\n                cellsrenderer: (row, column, value) => {\n\t\t\t\t\treturn '<div class=\"jqx-custom-inner-cell\">'+ this.getExpectedDate(value) +'</div>'\n\t\t\t\t  },\n                minwidth: 130,\n                maxwidth: 150,\n                renderer: columnrenderer \n            }, {\n                text: 'Expected Time',\n                datafield: 'expectedTime',\n                cellsrenderer: cellsrenderer,\n                minwidth: 120,\n                maxwidth: 150,\n                renderer: columnrenderer \n            }];\n     if(this.route.params['value'].id == '374'){\n\t\t let obj = {\n\t\t\ttext: 'Rejection Reason',\n\t\t\tdatafield: 'reason',\n\t\t\tcellsrenderer: cellsrenderer,\n\t\t\tminwidth: 170,\n\t\t\trenderer: columnrenderer \n\t\t}\n        this.columnData.push(obj)\n     }\n     this.fromDate =  moment().subtract(12,'months').endOf('month').format(this.timeZone.time);\n     this.toDate = moment().format(this.timeZone.time);\n\n     let params = {\n        ApartmentID : parseInt(this.sessionService.apartmentId),\n        ApartmentBlockID : parseInt(this.blockId),\n        StartDate : this.start_date === null ? moment().subtract(5,'months').startOf('month').add(this.timeZone.offset, 'hours').format(this.timeZone.date) : this.getDate(this.start_date),\n        EndDate : this.end_date === null ? moment().add(this.timeZone.offset, 'hours').format(this.timeZone.date) : this.getDate(this.end_date)\n    }\n    this.getDetails(params);\n\n    }\n\n    getAllBlockData(){\n\n\t  this.filterSelected = 'all';\n\t  this.singleBlock = \"Select Tower\";\n\t  \n\t  this.blockId = \"\";\n\t  this.datagrid.clearfilters();\n  \n\t}\n\n\tgetSingleBlock(block){\n  \t\n\t\tthis.filterSelected = 'single';\n\t\tthis.singleBlock = block.apartmentBlockNumber;\n\t\tthis.blockId = block.apartmentBlockId;\n\n\t\tlet filtergroup = new jqx.filter();\n\t\t\tlet filter_or_operator = 1;\n\t\t\tlet filtervalue = this.singleBlock;\n\t\t\tlet filtercondition = 'contains';\n\t\t\tlet filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n\t\t\tfiltergroup.operator = 'or';\n\t\t\tfiltergroup.addfilter(filter_or_operator, filterData);\n\t  \n\t\t\tthis.datagrid.showfiltercolumnbackground(false);\n\t  \n\t\t\tthis.columnData.forEach(item => {\n\t\t\t  if(item.datafield != 'Actions') {\n\t\t\t\tthis.datagrid.addfilter(item.datafield, filtergroup, true);\n\t\t\t  }\n\t\t\t})\n\t  \n\t\t\tthis.datagrid.applyfilters();\n\t}\n}\n"]}