{"version":3,"sources":["./src/app/modules/ams/my-property/property-configuration/property-towers/property-tower-info/property-tower-info.component.html","./src/app/modules/ams/my-property/property-configuration/property-towers/property-towers.component.html","./src/app/modules/ams/my-property/property-configuration/property-towers/property-tower-info/property-tower-info.component.scss","./src/app/modules/ams/my-property/property-configuration/property-towers/property-tower-info/property-tower-info.component.ts","./src/app/modules/ams/my-property/property-configuration/property-towers/property-towers-routing.module.ts","./src/app/modules/ams/my-property/property-configuration/property-towers/property-towers.component.scss","./src/app/modules/ams/my-property/property-configuration/property-towers/property-towers.component.ts","./src/app/modules/ams/my-property/property-configuration/property-towers/property-towers.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,8gCAA+8B,uCAAuC,qMAAqM,kCAAkC,6MAA6M,yCAAyC,gMAAgM,YAAY,siDAAsiD,E;;;;;;;;;;;;ACAptG;AAAe,gUAAiQ,sBAAsB,oWAAoW,yHAAyH,4BAA4B,wTAAwT,E;;;;;;;;;;;;ACAvlC;AAAe,6GAA8C,mQAAmQ,E;;;;;;;;;;;;;;;;;;;;;;ACAvQ;AAEY;AACE;AACD;AAEhC;IAOzB,0BAA0B,SAA1B,0BAA0B;IAUrC,YACS,gBAAiC,EAChC,aAA2B,EAC3B,cAA6B;QAF9B,qBAAgB,GAAhB,gBAAgB,CAAiB;QAChC,kBAAa,GAAb,aAAa,CAAc;QAC3B,mBAAc,GAAd,cAAc,CAAe;QATvC,WAAM,GAAW,KAAK,CAAC;QACvB,mBAAc,GAAW,KAAK,CAAC;QAG/B,oBAAe,GAAW,KAAK,CAAC;IAM5B,CAAC;IAGL,YAAY;QACX,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;IAC5B,CAAC;IAED,yBAAyB,CAAC,IAAI;QAE5B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAE5B,IAAI,OAAO,GAAG;YAEZ,kBAAkB,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;YACzD,sBAAsB,EAAE,IAAI,CAAC,KAAK,CAAC,oBAAoB;YACvD,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW;YACrC,aAAa,EAAE,IAAI,CAAC,cAAc,CAAC,WAAW;YAC9C,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;YAC/B,YAAY,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;YAC7C,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU;YACnC,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM;YACvC,WAAW,EAAE,sDAAO,EAAE,CAAC,WAAW,EAAE;YACpC,cAAc,EAAE,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC;YACzC,sBAAsB,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC;YACjE,wBAAwB,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC;YACrE,iBAAiB,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;SAExD;QAED,IAAI,MAAM,GAAG;YACX,cAAc,EAAE,OAAO;SACxB;QAED,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,GAAO,EAAE,EAAE;YAEvE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAE7B,IAAG,GAAG,CAAC,OAAO,EAAE;gBACd,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,oBAAoB,GAAG,uBAAuB,CAAC,CAAC;aAC/F;iBACI;gBACH,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;aACrB;QAEH,CAAC,CAAC,CAAC;IAGL,CAAC;IAED,QAAQ;QAEN,IAAI,MAAM,GAAG;YACX,gBAAgB,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;SACxD;QAEF,IAAI,CAAC,gBAAgB,CAAC,8BAA8B,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,GAAO,EAAE,EAAE;YAEhF,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,MAAM,CAAC;YAC7B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAE9B,CAAC,CAAC,CAAC;IAEJ,CAAC;CAEF;;YA1FQ,kFAAgB;YAChB,oFAAa;YACb,mFAAc;;;oBAWpB,mDAAK;;AAFK,0BAA0B;IALtC,+DAAS,CAAC;QACT,QAAQ,EAAE,yBAAyB;QACnC,oUAAmD;;KAEpD,CAAC;mFAY0B,kFAAgB;QAClB,oFAAa;QACZ,mFAAc;GAb5B,0BAA0B,CA+EtC;AA/EsC;;;;;;;;;;;;;;;;;;;;;ACbE;AACc;AAEe;AAE/D,MAAM,MAAM,GAAW;IAC5B,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kFAAuB,EAAE;CACjD,CAAC;IAMW,2BAA2B,SAA3B,2BAA2B;CAAI;AAA/B,2BAA2B;IAJvC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,2BAA2B,CAAI;AAAJ;;;;;;;;;;;;;ACbxC;AAAe,6GAA8C,mOAAmO,E;;;;;;;;;;;;;;;;;;;;;;ACArL;AAClE;AAEY;AAE4C;AAE5B;AACC;IAOzD,uBAAuB,SAAvB,uBAAuB;IAqBlC,YACU,MAAc,EACf,MAAiB,EACjB,gBAAiC,EAChC,cAA6B;QAH7B,WAAM,GAAN,MAAM,CAAQ;QACf,WAAM,GAAN,MAAM,CAAW;QACjB,qBAAgB,GAAhB,gBAAgB,CAAiB;QAChC,mBAAc,GAAd,cAAc,CAAe;QAvBvC,iBAAY,GAAW,KAAK,CAAC;QAE7B,qBAAgB,GAAW,KAAK,CAAC;QAEjC,mBAAc,GAAU,KAAK,CAAC;QAC9B,gBAAW,GAAU,cAAc,CAAC;IAmBhC,CAAC;IAGL,gBAAgB;QAEd,IAAG,IAAI,CAAC,SAAS,IAAI,EAAE,EAAC;YAEtB,IAAI,WAAW,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE,CAAC;YACnC,IAAI,kBAAkB,GAAG,CAAC,CAAC;YAC3B,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC;YACjC,IAAI,eAAe,GAAG,UAAU,CAAC;YACjC,IAAI,UAAU,GAAG,WAAW,CAAC,YAAY,CAAC,cAAc,EAAE,WAAW,EAAE,eAAe,CAAC,CAAC;YACxF,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC;YAC5B,WAAW,CAAC,SAAS,CAAC,kBAAkB,EAAE,UAAU,CAAC,CAAC;YAEtD,IAAI,CAAC,QAAQ,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC;YAEhD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBAC7B,IAAG,IAAI,CAAC,SAAS,IAAI,SAAS,EAAE;oBAC9B,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;iBAC5D;YACH,CAAC,CAAC;YAEF,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;SAE9B;aACI;YACH,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;SAC9B;IAEH,CAAC;IAED,aAAa;QAEX,IAAI,aAAa,GAAG,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE;YACzC,OAAO,qCAAqC,GAAG,KAAK,GAAG,QAAQ,CAAC;QAClE,CAAC;QAED,IAAI,cAAc,GAAG,CAAC,KAAK,EAAE,EAAE;YAC7B,OAAO,6BAA6B,GAAG,KAAK,GAAG,QAAQ,CAAC;QAC1D,CAAC;IAGH,CAAC;IAED,QAAQ;QAIN,IAAI,MAAM,GAAG;YACX,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,WAAW;SAC7C;QAED,IAAI,CAAC,gBAAgB,CAAC,8BAA8B,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,GAAO,EAAE,EAAE;YAEjF,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;YACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YAEzB,IAAG,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAC;gBAC/B,IAAI,CAAC,gBAAgB,GAAG,IAAI;aAC7B;iBACI;gBACH,IAAI,CAAC,gBAAgB,GAAG,KAAK;aAC9B;QAGH,CAAC,CAAC,CAAC;IAIL,CAAC;CAEF;;YAhHQ,sDAAM;YAEN,kEAAS;YAIT,kFAAgB;YAChB,mFAAc;;;uBA0BpB,uDAAS,SAAC,UAAU,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;;AAnB7B,uBAAuB;IALnC,+DAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,wSAA+C;;KAEhD,CAAC;mFAuBkB,sDAAM;QACP,kEAAS;QACA,kFAAgB;QACjB,mFAAc;GAzB5B,uBAAuB,CAkGnC;AAlGmC;;;;;;;;;;;;;;;;;;;;;;;;;;ACfK;AACM;AAEA;AACW;AACqB;AAEnB;AACU;AACC;AAED;AAC2B;IAgBpF,oBAAoB,SAApB,oBAAoB;CAAI;AAAxB,oBAAoB;IAdhC,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAE,kFAAuB,EAAE,6GAA0B,CAAC;QACpE,OAAO,EAAE;YACP,4DAAY;YACZ,yEAAY;YACZ,mFAAe;YACf,oFAAY;YACZ,4DAAY,CAAC,QAAQ,CAAC,sEAAM,CAAC;YAC7B,2FAA2B;SAC5B;QACD,SAAS,EAAE;YACT,kFAAuB;SACxB;KACF,CAAC;GACW,oBAAoB,CAAI;AAAJ","file":"src-app-modules-ams-my-property-property-configuration-property-towers-property-towers-module-es2015.js","sourcesContent":["export default \"<div class=\\\"property-tower-wrapper\\\">\\n\\n\\t<app-loader *ngIf=\\\"!isTowersLoaded\\\"></app-loader>\\n\\n\\t<ng-container *ngIf=\\\"isTowersLoaded\\\">\\n\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t<div class=\\\"d-flex justify-content-end mb-3\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"link\\\" (click)=\\\"showEditForm()\\\">\\n\\t\\t\\t\\t\\t\\t<mat-icon  [color]=\\\"'primary'\\\" *ngIf=\\\"isEdit\\\" [svgIcon]=\\\"'arrow_back'\\\"></mat-icon>\\n\\t\\t\\t\\t\\t\\t<mat-icon class=\\\"icon-md\\\" [color]=\\\"'primary'\\\" *ngIf=\\\"!isEdit\\\" svgIcon=\\\"feather:edit\\\"></mat-icon>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t<ng-container *ngIf=\\\"!isEdit\\\">\\n\\n\\t\\t\\t<form #propertyDetailsForm = \\\"ngForm\\\" name=\\\"propertyDetailsForm\\\" novalidate>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"data-wrapper\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Construction Area SQ.M</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<p>{{tower.blockConstructedArea | notAvail}}</p>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Common Area SQ.M</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<p>{{tower.blockCommonArea | notAvail}}</p>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Units under construction</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<p>{{tower.unitsUnderConstruction | notAvail}}</p>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Total Units</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<p>{{totalItems}}</p>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\n\\t\\t\\t\\t</div>\\n\\t\\n\\t\\t\\t</form>\\n\\t\\n\\t\\t</ng-container>\\n\\t\\n\\t\\t<ng-container *ngIf=\\\"isEdit\\\">\\n\\t\\t\\t\\n\\t\\t\\t<form #propertyDetailsForm = \\\"ngForm\\\" name=\\\"propertyDetailsForm\\\" novalidate (ngSubmit)=\\\"submitPropertyDetailsForm(propertyDetailsForm)\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Construction Area SQ.M</label>\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"blockConstructedArea\\\" [(ngModel)]=\\\"tower.blockConstructedArea\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Common Area SQ.M</label>\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"blockCommonArea\\\" [(ngModel)]=\\\"tower.blockCommonArea\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Units under construction SQ.M</label>\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"constructionInProgress\\\" [(ngModel)]=\\\"tower.unitsUnderConstruction\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"mt-4 float-right\\\">\\n\\t\\t\\t\\t\\t<submit-button [isSubmit]=\\\"isDataSubmitted\\\">Submit</submit-button>\\n\\t\\t\\t\\t</div>\\n\\t\\n\\t\\t\\t</form>\\n\\t\\n\\t\\t</ng-container>\\n\\n\\t</ng-container>\\n\\n</div>\";","export default \"<div class=\\\"property-details-wrapper mt-5\\\">\\n\\n\\t<app-loader *ngIf=\\\"!isDataLoaded\\\"></app-loader>\\n\\n\\t<ng-container *ngIf=\\\"isDataLoaded\\\">\\n\\n\\t\\t<div class=\\\"d-flex flex-column mb-4\\\">\\n\\t\\t\\t<h6 class=\\\"text-secondary\\\" *ngIf=\\\"isBlockAvailable\\\">{{blockListData.length}} Records found</h6>\\n\\t\\t</div>\\n\\n\\t</ng-container>\\n\\n\\t<div class=\\\"bg-card shadow warn\\\" *ngIf=\\\"isDataLoaded && !isBlockAvailable\\\">\\n\\t\\t<h6>No Towers Available</h6>\\n\\t</div>\\n\\n\\t<ng-container *ngIf=\\\"isDataLoaded && isBlockAvailable\\\">\\n\\n\\t\\t<mat-accordion>\\n\\n\\t\\t\\t<mat-expansion-panel [expanded]=\\\"i == 0\\\" *ngFor=\\\"let tower of blockListData; let i = index\\\">\\n\\n\\t\\t\\t\\t<mat-expansion-panel-header>\\n\\t\\t\\t\\t\\t<mat-panel-title>\\n\\t\\t\\t\\t\\t\\t<h6 class=\\\"mb-2\\\">{{tower.apartmentBlockNumber}}</h6>\\n\\t\\t\\t\\t\\t</mat-panel-title>\\n\\t\\t\\t\\t</mat-expansion-panel-header>\\n\\n\\t\\t\\t\\t<mat-panel-description>\\n\\t\\t\\t\\t\\t<app-property-tower-info [tower]=\\\"tower\\\"></app-property-tower-info>\\n\\t\\t\\t\\t</mat-panel-description>\\n\\n\\t\\t\\t</mat-expansion-panel>\\n\\n\\t\\t</mat-accordion>\\n\\n\\t</ng-container>\\n\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL215LXByb3BlcnR5L3Byb3BlcnR5LWNvbmZpZ3VyYXRpb24vcHJvcGVydHktdG93ZXJzL3Byb3BlcnR5LXRvd2VyLWluZm8vcHJvcGVydHktdG93ZXItaW5mby5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, Input } from '@angular/core';\n\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { SessionService } from 'src/app/core/session/session.service';\n\nimport _moment from \"moment-timezone\";\n\n@Component({\n  selector: 'app-property-tower-info',\n  templateUrl: './property-tower-info.component.html',\n  styleUrls: ['./property-tower-info.component.scss']\n})\nexport class PropertyTowerInfoComponent implements OnInit {\n  \n  @Input() tower:any;\n\n  isEdit:boolean = false;\n  isTowersLoaded:boolean = false;\n  totalItems:any;\n\n  isDataSubmitted:boolean = false;\n\n  constructor(\n  \tprivate apartmentService:ApartmentService,\n    private sharedService:SharedService,\n    private sessionService:SessionService\n  ) { }\n\n\n  showEditForm(){\n  \tthis.isEdit = !this.isEdit;\n  }\n\n  submitPropertyDetailsForm(form){\n\n    this.isDataSubmitted = true;\n\n    let details = {\n\n      \"apartmentBlockId\": parseInt(this.tower.apartmentBlockId),\n      \"apartmentBlockNumber\": this.tower.apartmentBlockNumber,\n      \"description\": this.tower.description,\n      \"apartmentId\": this.sessionService.apartmentId,\n      \"isActive\": this.tower.isActive,\n      \"insertedBy\": parseInt(this.tower.insertedBy),\n      \"insertedOn\": this.tower.insertedOn,\n      \"updatedBy\": this.sessionService.userId,\n      \"updatedOn\": _moment().toISOString(),\n      \"totalNounits\": parseInt(this.totalItems),\n      \"blockConstructedArea\": parseInt(this.tower.blockConstructedArea),\n      \"unitsUnderConstruction\": parseInt(this.tower.unitsUnderConstruction),\n      \"blockCommonArea\": parseInt(this.tower.blockCommonArea)\n\n    }\n\n    let params = {\n      apartmentBlock: details\n    }\n\n    this.apartmentService.updateApartmentBlock(params).subscribe((res:any) => {\n\n      this.isDataSubmitted = false;\n\n      if(res.message) {\n        this.isEdit = false;\n        this.sharedService.setAlertMessage(this.tower.apartmentBlockNumber + \" updated successfully\");\n      }\n      else {\n        this.isEdit = false;\n      }\n\n    });\n\n\n  }\n\n  ngOnInit() {\n\n    let params = {\n      apartmentBlockId: parseInt(this.tower.apartmentBlockId)\n    }\n\n  \tthis.apartmentService.getApartmentBlockUnitByBlockId(params).subscribe((res:any) => {\n  \t\t\n      this.totalItems = res.length;\n      this.isTowersLoaded = true;\n\n  \t});\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PropertyTowersComponent } from './property-towers.component';\n\nexport const routes: Routes = [\n  { path: '', component: PropertyTowersComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PropertyTowersRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL215LXByb3BlcnR5L3Byb3BlcnR5LWNvbmZpZ3VyYXRpb24vcHJvcGVydHktdG93ZXJzL3Byb3BlcnR5LXRvd2Vycy5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild, TemplateRef, HostListener, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\n\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { SessionService } from 'src/app/core/session/session.service';\n\n@Component({\n  selector: 'app-property-towers',\n  templateUrl: './property-towers.component.html',\n  styleUrls: ['./property-towers.component.scss']\n})\nexport class PropertyTowersComponent implements OnInit {\n  \n  isDataLoaded:boolean = false;\n  blockListData:any;\n  isBlockAvailable:boolean = false;\n\n  filterSelected:string = \"all\";\n  singleBlock:string = \"Select Tower\";\n  selectedBlockId:number;\n\n  apartmentBlockId:any;\n  apartmentBlockUnitId:any;\n\n  towerDataList:any;\n  columnData:any;\n  gridSourceData:any;\n  totalItems:any;\n  towerData:any;  \n\n  @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n\n  constructor(\n    private router: Router,\n    public dialog: MatDialog,\n  \tprivate apartmentService:ApartmentService,\n    private sessionService:SessionService\n  ) { }\n\n\n  onGlSearchFilter() {\n\n    if(this.towerData != \"\"){\n\n      let filtergroup = new jqx.filter();\n      let filter_or_operator = 1;\n      let filtervalue = this.towerData;\n      let filtercondition = 'contains';\n      let filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n      filtergroup.operator = 'or';\n      filtergroup.addfilter(filter_or_operator, filterData);\n\n      this.datagrid.showfiltercolumnbackground(false);\n\n      this.columnData.forEach(item => {\n        if(item.datafield != 'Actions') {\n          this.datagrid.addfilter(item.datafield, filtergroup, true);\n        }\n      })\n\n      this.datagrid.applyfilters();\n      \n    }\n    else {\n      this.datagrid.clearfilters();\n    }\n\n  }\n\n  renderColumns() {\n\n    var cellsrenderer = (row, column, value) => {\n      return '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n    }\n\n    var columnrenderer = (value) => {\n      return '<div style=\"padding: 14px\">' + value + '</div>';\n    }\n\n\n  }\n\n  ngOnInit() {\n\n    \n\n    let params = {\n      apartmentId: this.sessionService.apartmentId\n    }\n    \n    this.apartmentService.getApartmentBlockByApartmentId(params).subscribe((res:any) => {\n      \n      this.blockListData = res;\n      this.isDataLoaded = true;\n\n      if(this.blockListData.length > 0){\n        this.isBlockAvailable = true\n      }\n      else {\n        this.isBlockAvailable = false\n      }\n\n\n    });\n\n  \t\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RouterModule } from '@angular/router';\nimport { routes } from './property-towers-routing.module';\nimport { PropertyTowersRoutingModule } from './property-towers-routing.module';\n\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { CondoCardModule } from 'src/app/modules/ui/card/card.module';\nimport { SelectModule } from 'src/app/modules/ui/select/select.module';\n\nimport { PropertyTowersComponent } from './property-towers.component';\nimport { PropertyTowerInfoComponent } from './property-tower-info/property-tower-info.component';\n\n@NgModule({\n  declarations: [ PropertyTowersComponent, PropertyTowerInfoComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    CondoCardModule,\n    SelectModule,\n    RouterModule.forChild(routes),\n    PropertyTowersRoutingModule\n  ],\n  bootstrap: [\n    PropertyTowersComponent\n  ]\n})\nexport class PropertyTowersModule { }\n"],"sourceRoot":"webpack:///"}