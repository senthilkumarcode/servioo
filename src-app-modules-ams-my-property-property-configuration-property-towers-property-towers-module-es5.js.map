{"version":3,"sources":["webpack:///src/app/modules/ams/my-property/property-configuration/property-towers/property-tower-info/property-tower-info.component.html","webpack:///src/app/modules/ams/my-property/property-configuration/property-towers/property-towers.component.html","webpack:///src/app/modules/ams/my-property/property-configuration/property-towers/property-tower-info/property-tower-info.component.scss","webpack:///src/app/modules/ams/my-property/property-configuration/property-towers/property-tower-info/property-tower-info.component.ts","webpack:///src/app/modules/ams/my-property/property-configuration/property-towers/property-towers-routing.module.ts","webpack:///src/app/modules/ams/my-property/property-configuration/property-towers/property-towers.component.scss","webpack:///src/app/modules/ams/my-property/property-configuration/property-towers/property-towers.component.ts","webpack:///src/app/modules/ams/my-property/property-configuration/property-towers/property-towers.module.ts"],"names":["PropertyTowerInfoComponent","apartmentService","sharedService","sessionService","isEdit","isTowersLoaded","isDataSubmitted","form","details","parseInt","tower","apartmentBlockId","apartmentBlockNumber","description","apartmentId","isActive","insertedBy","insertedOn","userId","toISOString","totalItems","blockConstructedArea","unitsUnderConstruction","blockCommonArea","params","apartmentBlock","updateApartmentBlock","subscribe","res","message","setAlertMessage","getApartmentBlockUnitByBlockId","length","selector","template","routes","path","component","PropertyTowersRoutingModule","imports","forChild","exports","PropertyTowersComponent","router","dialog","isDataLoaded","isBlockAvailable","filterSelected","singleBlock","towerData","filtergroup","jqx","filter","filter_or_operator","filtervalue","filtercondition","filterData","createfilter","operator","addfilter","datagrid","showfiltercolumnbackground","columnData","forEach","item","datafield","applyfilters","clearfilters","cellsrenderer","row","column","value","columnrenderer","getApartmentBlockByApartmentId","blockListData","PropertyTowersModule","declarations","bootstrap"],"mappings":"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","file":"src-app-modules-ams-my-property-property-configuration-property-towers-property-towers-module-es5.js","sourcesContent":["export default \"<div class=\\\"property-tower-wrapper\\\">\\n\\n\\t<app-loader *ngIf=\\\"!isTowersLoaded\\\"></app-loader>\\n\\n\\t<ng-container *ngIf=\\\"isTowersLoaded\\\">\\n\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t<div class=\\\"d-flex justify-content-end mb-3\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"link\\\" (click)=\\\"showEditForm()\\\">\\n\\t\\t\\t\\t\\t\\t<mat-icon  [color]=\\\"'primary'\\\" *ngIf=\\\"isEdit\\\" [svgIcon]=\\\"'arrow_back'\\\"></mat-icon>\\n\\t\\t\\t\\t\\t\\t<mat-icon class=\\\"icon-md\\\" [color]=\\\"'primary'\\\" *ngIf=\\\"!isEdit\\\" svgIcon=\\\"feather:edit\\\"></mat-icon>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t<ng-container *ngIf=\\\"!isEdit\\\">\\n\\n\\t\\t\\t<form #propertyDetailsForm = \\\"ngForm\\\" name=\\\"propertyDetailsForm\\\" novalidate>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"data-wrapper\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Construction Area SQ.M</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<p>{{tower.blockConstructedArea | notAvail}}</p>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Common Area SQ.M</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<p>{{tower.blockCommonArea | notAvail}}</p>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Units under construction</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<p>{{tower.unitsUnderConstruction | notAvail}}</p>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Total Units</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<p>{{totalItems}}</p>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\n\\t\\t\\t\\t</div>\\n\\t\\n\\t\\t\\t</form>\\n\\t\\n\\t\\t</ng-container>\\n\\t\\n\\t\\t<ng-container *ngIf=\\\"isEdit\\\">\\n\\t\\t\\t\\n\\t\\t\\t<form #propertyDetailsForm = \\\"ngForm\\\" name=\\\"propertyDetailsForm\\\" novalidate (ngSubmit)=\\\"submitPropertyDetailsForm(propertyDetailsForm)\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Construction Area SQ.M</label>\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"blockConstructedArea\\\" [(ngModel)]=\\\"tower.blockConstructedArea\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Common Area SQ.M</label>\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"blockCommonArea\\\" [(ngModel)]=\\\"tower.blockCommonArea\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Units under construction SQ.M</label>\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"constructionInProgress\\\" [(ngModel)]=\\\"tower.unitsUnderConstruction\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"mt-4 float-right\\\">\\n\\t\\t\\t\\t\\t<submit-button [isSubmit]=\\\"isDataSubmitted\\\">Submit</submit-button>\\n\\t\\t\\t\\t</div>\\n\\t\\n\\t\\t\\t</form>\\n\\t\\n\\t\\t</ng-container>\\n\\n\\t</ng-container>\\n\\n</div>\";","export default \"<div class=\\\"property-details-wrapper mt-5\\\">\\n\\n\\t<app-loader *ngIf=\\\"!isDataLoaded\\\"></app-loader>\\n\\n\\t<ng-container *ngIf=\\\"isDataLoaded\\\">\\n\\n\\t\\t<div class=\\\"d-flex flex-column mb-4\\\">\\n\\t\\t\\t<h6 class=\\\"text-secondary\\\" *ngIf=\\\"isBlockAvailable\\\">{{blockListData.length}} Records found</h6>\\n\\t\\t</div>\\n\\n\\t</ng-container>\\n\\n\\t<div class=\\\"bg-card shadow warn\\\" *ngIf=\\\"isDataLoaded && !isBlockAvailable\\\">\\n\\t\\t<h6>No Towers Available</h6>\\n\\t</div>\\n\\n\\t<ng-container *ngIf=\\\"isDataLoaded && isBlockAvailable\\\">\\n\\n\\t\\t<mat-accordion>\\n\\n\\t\\t\\t<mat-expansion-panel [expanded]=\\\"i == 0\\\" *ngFor=\\\"let tower of blockListData; let i = index\\\">\\n\\n\\t\\t\\t\\t<mat-expansion-panel-header>\\n\\t\\t\\t\\t\\t<mat-panel-title>\\n\\t\\t\\t\\t\\t\\t<h6 class=\\\"mb-2\\\">{{tower.apartmentBlockNumber}}</h6>\\n\\t\\t\\t\\t\\t</mat-panel-title>\\n\\t\\t\\t\\t</mat-expansion-panel-header>\\n\\n\\t\\t\\t\\t<mat-panel-description>\\n\\t\\t\\t\\t\\t<app-property-tower-info [tower]=\\\"tower\\\"></app-property-tower-info>\\n\\t\\t\\t\\t</mat-panel-description>\\n\\n\\t\\t\\t</mat-expansion-panel>\\n\\n\\t\\t</mat-accordion>\\n\\n\\t</ng-container>\\n\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL215LXByb3BlcnR5L3Byb3BlcnR5LWNvbmZpZ3VyYXRpb24vcHJvcGVydHktdG93ZXJzL3Byb3BlcnR5LXRvd2VyLWluZm8vcHJvcGVydHktdG93ZXItaW5mby5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, Input } from '@angular/core';\n\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { SessionService } from 'src/app/core/session/session.service';\n\nimport _moment from \"moment-timezone\";\n\n@Component({\n  selector: 'app-property-tower-info',\n  templateUrl: './property-tower-info.component.html',\n  styleUrls: ['./property-tower-info.component.scss']\n})\nexport class PropertyTowerInfoComponent implements OnInit {\n  \n  @Input() tower:any;\n\n  isEdit:boolean = false;\n  isTowersLoaded:boolean = false;\n  totalItems:any;\n\n  isDataSubmitted:boolean = false;\n\n  constructor(\n  \tprivate apartmentService:ApartmentService,\n    private sharedService:SharedService,\n    private sessionService:SessionService\n  ) { }\n\n\n  showEditForm(){\n  \tthis.isEdit = !this.isEdit;\n  }\n\n  submitPropertyDetailsForm(form){\n\n    this.isDataSubmitted = true;\n\n    let details = {\n\n      \"apartmentBlockId\": parseInt(this.tower.apartmentBlockId),\n      \"apartmentBlockNumber\": this.tower.apartmentBlockNumber,\n      \"description\": this.tower.description,\n      \"apartmentId\": this.sessionService.apartmentId,\n      \"isActive\": this.tower.isActive,\n      \"insertedBy\": parseInt(this.tower.insertedBy),\n      \"insertedOn\": this.tower.insertedOn,\n      \"updatedBy\": this.sessionService.userId,\n      \"updatedOn\": _moment().toISOString(),\n      \"totalNounits\": parseInt(this.totalItems),\n      \"blockConstructedArea\": parseInt(this.tower.blockConstructedArea),\n      \"unitsUnderConstruction\": parseInt(this.tower.unitsUnderConstruction),\n      \"blockCommonArea\": parseInt(this.tower.blockCommonArea)\n\n    }\n\n    let params = {\n      apartmentBlock: details\n    }\n\n    this.apartmentService.updateApartmentBlock(params).subscribe((res:any) => {\n\n      this.isDataSubmitted = false;\n\n      if(res.message) {\n        this.isEdit = false;\n        this.sharedService.setAlertMessage(this.tower.apartmentBlockNumber + \" updated successfully\");\n      }\n      else {\n        this.isEdit = false;\n      }\n\n    });\n\n\n  }\n\n  ngOnInit() {\n\n    let params = {\n      apartmentBlockId: parseInt(this.tower.apartmentBlockId)\n    }\n\n  \tthis.apartmentService.getApartmentBlockUnitByBlockId(params).subscribe((res:any) => {\n  \t\t\n      this.totalItems = res.length;\n      this.isTowersLoaded = true;\n\n  \t});\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PropertyTowersComponent } from './property-towers.component';\n\nexport const routes: Routes = [\n  { path: '', component: PropertyTowersComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PropertyTowersRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL215LXByb3BlcnR5L3Byb3BlcnR5LWNvbmZpZ3VyYXRpb24vcHJvcGVydHktdG93ZXJzL3Byb3BlcnR5LXRvd2Vycy5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild, TemplateRef, HostListener, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\n\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { SessionService } from 'src/app/core/session/session.service';\n\n@Component({\n  selector: 'app-property-towers',\n  templateUrl: './property-towers.component.html',\n  styleUrls: ['./property-towers.component.scss']\n})\nexport class PropertyTowersComponent implements OnInit {\n  \n  isDataLoaded:boolean = false;\n  blockListData:any;\n  isBlockAvailable:boolean = false;\n\n  filterSelected:string = \"all\";\n  singleBlock:string = \"Select Tower\";\n  selectedBlockId:number;\n\n  apartmentBlockId:any;\n  apartmentBlockUnitId:any;\n\n  towerDataList:any;\n  columnData:any;\n  gridSourceData:any;\n  totalItems:any;\n  towerData:any;  \n\n  @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n\n  constructor(\n    private router: Router,\n    public dialog: MatDialog,\n  \tprivate apartmentService:ApartmentService,\n    private sessionService:SessionService\n  ) { }\n\n\n  onGlSearchFilter() {\n\n    if(this.towerData != \"\"){\n\n      let filtergroup = new jqx.filter();\n      let filter_or_operator = 1;\n      let filtervalue = this.towerData;\n      let filtercondition = 'contains';\n      let filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n      filtergroup.operator = 'or';\n      filtergroup.addfilter(filter_or_operator, filterData);\n\n      this.datagrid.showfiltercolumnbackground(false);\n\n      this.columnData.forEach(item => {\n        if(item.datafield != 'Actions') {\n          this.datagrid.addfilter(item.datafield, filtergroup, true);\n        }\n      })\n\n      this.datagrid.applyfilters();\n      \n    }\n    else {\n      this.datagrid.clearfilters();\n    }\n\n  }\n\n  renderColumns() {\n\n    var cellsrenderer = (row, column, value) => {\n      return '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n    }\n\n    var columnrenderer = (value) => {\n      return '<div style=\"padding: 14px\">' + value + '</div>';\n    }\n\n\n  }\n\n  ngOnInit() {\n\n    \n\n    let params = {\n      apartmentId: this.sessionService.apartmentId\n    }\n    \n    this.apartmentService.getApartmentBlockByApartmentId(params).subscribe((res:any) => {\n      \n      this.blockListData = res;\n      this.isDataLoaded = true;\n\n      if(this.blockListData.length > 0){\n        this.isBlockAvailable = true\n      }\n      else {\n        this.isBlockAvailable = false\n      }\n\n\n    });\n\n  \t\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RouterModule } from '@angular/router';\nimport { routes } from './property-towers-routing.module';\nimport { PropertyTowersRoutingModule } from './property-towers-routing.module';\n\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { CondoCardModule } from 'src/app/modules/ui/card/card.module';\nimport { SelectModule } from 'src/app/modules/ui/select/select.module';\n\nimport { PropertyTowersComponent } from './property-towers.component';\nimport { PropertyTowerInfoComponent } from './property-tower-info/property-tower-info.component';\n\n@NgModule({\n  declarations: [ PropertyTowersComponent, PropertyTowerInfoComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    CondoCardModule,\n    SelectModule,\n    RouterModule.forChild(routes),\n    PropertyTowersRoutingModule\n  ],\n  bootstrap: [\n    PropertyTowersComponent\n  ]\n})\nexport class PropertyTowersModule { }\n"]}