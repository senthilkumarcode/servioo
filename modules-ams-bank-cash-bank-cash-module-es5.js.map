{"version":3,"sources":["webpack:///src/app/modules/ams/bank-cash/bank-cash.component.html","webpack:///src/app/modules/ams/bank-cash/components/bank-settings/bank-settings.component.html","webpack:///src/app/modules/ams/bank-cash/bank-cash-routing.module.ts","webpack:///src/app/modules/ams/bank-cash/bank-cash.component.scss","webpack:///src/app/modules/ams/bank-cash/bank-cash.component.ts","webpack:///src/app/modules/ams/bank-cash/bank-cash.module.ts","webpack:///src/app/modules/ams/bank-cash/components/bank-settings/bank-settings.component.scss","webpack:///src/app/modules/ams/bank-cash/components/bank-settings/bank-settings.component.ts"],"names":["routes","path","component","BankCashRoutingModule","imports","forChild","exports","BankCashComponent","selector","template","BankCashModule","declarations","BankSettingsComponent","injector","dialog","bankAccountService","lookupService","sharedService","sessionService","isBankLoaded","isBankSubmitted","isBankNew","isBankUpdate","alertMessage","isError","isSuccess","modalService","get","bank","item","id","showConfirmModal","acc","form","details","apartmentId","bankName","branchName","accountNumber","accountHolderName","ifsc","isPrimary","parseInt","userId","toISOString","bankAccountDetails","addBankAccountDetails","subscribe","res","message","getAllBankAccountDetails","setAlertMessage","bankAccountData","filter","isActive","errorMessage","bankAccountDetailsId","insertedBy","insertedOn","updateBankAccountDetails","unitlistdeleteindexcast","params","deleteBy","deleteBankAccountDetails","type","setUnitListDeleteIndex","error"],"mappings":"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","file":"modules-ams-bank-cash-bank-cash-module-es5.js","sourcesContent":["export default \"<p>bank-cash works!</p>\\n\";","export default \"<div class=\\\"bank-setup-wrapper\\\">\\n\\n\\t<app-loader *ngIf=\\\"!isBankLoaded\\\"></app-loader>\\n\\n\\t<div class=\\\"category-list list-boxes\\\" *ngIf=\\\"isBankLoaded\\\">\\n\\t\\t<h4 class=\\\"main-title-mini\\\">Bank Accounts</h4>\\n\\t\\t<ng-container *ngFor=\\\"let item of bankAccountData; let i = index\\\">\\n\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"card-body nohover\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"icons\\\">\\n\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" (click)=\\\"showBankAccountInfo(unit)\\\"><mat-icon class=\\\"icon-md view\\\" svgIcon=\\\"feather:eye\\\"></mat-icon></a>\\n\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\"><mat-icon [color]=\\\"'primary'\\\" svgIcon=\\\"feather:edit\\\" class=\\\"mr-2 link\\\" (click)=\\\"updatebankAccount(item, i)\\\"></mat-icon></a>\\n\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" (click)=\\\"showConfirmModal(item.bankAccountDetailsId)\\\"><mat-icon class=\\\"delete\\\" svgIcon=\\\"feather:trash\\\"></mat-icon></a>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<h6>{{item.accountNumber}}</h6>\\n\\t\\t\\t\\t\\t\\t<h6 class=\\\"mb-3 mt-0\\\">{{item.accountHolderName}}</h6>\\n\\t\\t\\t\\t\\t\\t<p class=\\\"small\\\">{{item.bankName}} - {{item.branchName}}</p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</li>\\n\\t\\t</ng-container>\\n\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t<div class=\\\"card-body new text-center\\\">\\n\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" class=\\\"rounded-btn green\\\" (click)=\\\"addNewbankAccount()\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"icon\\\">+</div>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t<h6 class=\\\"tc-green\\\">Add Bank Account</h6>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</li>\\n\\t</div>\\n\\n\\t<div class=\\\"card mt-5\\\" *ngIf=\\\"isBankNew || isBankUpdate\\\">\\n\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h6 *ngIf=\\\"isBankNew\\\">Add Bank Account</h6>\\n    \\t\\t\\t<h6 *ngIf=\\\"!isBankNew\\\">Update Bank Account</h6>\\n    \\t\\t</div>\\n    \\t\\t<div class=\\\"float-right\\\" (click)=\\\"removeBankBox()\\\">\\n    \\t\\t\\t<mat-icon [svgIcon]=\\\"'close'\\\"></mat-icon>\\n    \\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\n\\t\\t\\t<app-alert-message [message]=\\\"alertTicketMessage\\\" [isError]=\\\"isError\\\"></app-alert-message>\\n\\n\\t\\t\\t<app-loader *ngIf=\\\"!isBankSubmitted\\\"></app-loader>\\n\\n\\t\\t\\t<ng-container *ngIf=\\\"isBankSubmitted\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<form #addbankAccountForm = \\\"ngForm\\\" name=\\\"addbankAccountForm\\\" (ngSubmit)=\\\"submitbankAccountForm(addbankAccountForm)\\\"  novalidate>\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Bank Account No*</label>\\n\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"bankAccountNo\\\" [(ngModel)]=\\\"bank.accountNumber\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Bank Name*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"bankName\\\" [(ngModel)]=\\\"bank.bankName\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Bank Branch Name*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"branchName\\\" [(ngModel)]=\\\"bank.branchName\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Account Holder Name*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"accountHolderName\\\" [(ngModel)]=\\\"bank.accountHolderName\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>IFSC Code*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"accountifsc\\\" [(ngModel)]=\\\"bank.ifsc\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box d-inline-block oh\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group mt-sm-35\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-check recur-check float-left\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"accountisPrimary\\\" name=\\\"accountisPrimary\\\" [(ngModel)]=\\\"bank.isPrimary\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    <label class=\\\"form-check-label tiny\\\" for=\\\"accountisPrimary\\\">Is Primary</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"list-inline float-right mt-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t</form>\\n\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t</div>\\n\\t</div>\\n\\n</div>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nimport { BankCashComponent } from './bank-cash.component';\nimport { BankSettingsComponent } from './components/bank-settings/bank-settings.component';\n\nconst routes: Routes = [\n\t{ path: '', component: BankCashComponent},\n\t{ path: 'bank', component: BankCashComponent},\n\t{ path: 'settings', component: BankSettingsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BankCashRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL2JhbmstY2FzaC9iYW5rLWNhc2guY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bank-cash',\n  templateUrl: './bank-cash.component.html',\n  styleUrls: ['./bank-cash.component.scss']\n})\nexport class BankCashComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BankCashRoutingModule } from './bank-cash-routing.module';\n\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nimport { BankCashComponent } from './bank-cash.component';\nimport { BankSettingsComponent } from './components/bank-settings/bank-settings.component';\n\n\n\n@NgModule({\n  declarations: [\n  \tBankCashComponent,\n  \tBankSettingsComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    BankCashRoutingModule\n  ]\n})\nexport class BankCashModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL2JhbmstY2FzaC9jb21wb25lbnRzL2Jhbmstc2V0dGluZ3MvYmFuay1zZXR0aW5ncy5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, Injector, HostListener, ViewChild, TemplateRef } from '@angular/core';\n\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatDialogRef } from \"@angular/material/dialog\";\n\nimport { BankAccountService } from 'src/app/api/controllers/BankAccount';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { ModalService } from 'src/app/shared/services/modal.service';\nimport { SessionService } from 'src/app/core/session/session.service';\n\nimport * as moment from 'moment';\nimport _moment from \"moment-timezone\";\n\n@Component({\n  selector: 'app-bank-settings',\n  templateUrl: './bank-settings.component.html',\n  styleUrls: ['./bank-settings.component.scss']\n})\nexport class BankSettingsComponent implements OnInit {\n\n  bankAccountData:any;\n\n  isBankLoaded:boolean = false;\n  isBankSubmitted:boolean = true;\n\n  isBankNew:boolean = false;\n  isBankUpdate:boolean = false;\n  \n  alertMessage:string = \"\";\n  isError:boolean = false; \n  isSuccess:boolean = false;\n\n  modalService:any;\n\n  bank:any; \n\n  constructor(\n  \t private injector: Injector,\n  \tpublic dialog: MatDialog,\n  \tprivate bankAccountService: BankAccountService,\n  \tprivate lookupService: LookupService,\n    private sharedService:SharedService,\n    private sessionService:SessionService\n  ) { \n  \tthis.modalService = this.injector.get(ModalService);\n  }\n\n  addNewbankAccount(){\n  \tthis.isBankNew = true;\n  \tthis.isBankUpdate = false;\n  \tthis.bank = {};\n  }\n\n  updatebankAccount(item){\n  \tthis.isBankUpdate = true;\n  \tthis.isBankNew = false;\n  \tthis.bank = item;\n  }\n\n  removeBankBox(){\n  \tthis.isBankNew = false;\n  \tthis.isBankUpdate = false;\n  \tthis.isError = false;\n  }\n\n\n  showConfirmModal(id) {\n    this.modalService.showConfirmModal(id);\n  }\n\n  showBankAccountInfo(acc){\n\n  }\n\n  submitbankAccountForm(form) {\n\n  \tthis.isBankSubmitted = false;\n\n  \tif(this.isBankNew) {\n\n  \t\tlet details = {\n\n\t\t  \"apartmentId\": this.sessionService.apartmentId,\n\t\t  \"bankName\": this.bank.bankName,\n\t\t  \"branchName\": this.bank.branchName,\n\t\t  \"accountNumber\": this.bank.accountNumber,\n\t\t  \"accountHolderName\": this.bank.accountHolderName,\n\t\t  \"ifsc\": this.bank.ifsc,\n\t\t  \"isPrimary\": this.bank.isPrimary,\n\t\t  \"isActive\": true,\n\t\t  \"insertedBy\": parseInt(this.sessionService.userId),\n\t\t  \"insertedOn\": _moment().toISOString(),\n\t\t  \"updatedBy\": null,\n\t\t  \"updatedOn\": null\n\n\t\t}\n\n\t\tlet bankAccountDetails = {\n\t\t\tbankAccountDetails: details\n\t\t}\n\n\t\tthis.bankAccountService.addBankAccountDetails(bankAccountDetails).subscribe((res:any) => {\n\n\t  \t\tif(res.message) {\n\n\t  \t\t\t\n\t  \t\t\tthis.bankAccountService.getAllBankAccountDetails().subscribe((res:any) => {\n\n\t  \t\t\t\tthis.isBankSubmitted = true;\n\t  \t\t\t\tthis.isBankNew = false;\n  \t\t\t\t\tthis.isBankUpdate = false;\n\t\t  \t\t\t\n\t\t  \t\t\tthis.isSuccess = true;\n\t\t  \t\t\tthis.sharedService.setAlertMessage(\"Bank Account Added Successfully\");\n\t\t          \t\n\t\t          \tthis.bankAccountData = res.filter(item => {\n\t                \treturn item.isActive && (item.apartmentId == this.sessionService.apartmentId);\n\t              \t});\t\n\n\t  \t\t\t});\n\n\t  \t\t\t\n\n\t  \t\t}\n\t  \t\telse {\n\n\t  \t\t\tthis.isBankSubmitted = true;\t\n\t          \tthis.isError = true;\n\t          \tthis.alertMessage = res.errorMessage;\n\t  \t\t}\n\n  \t\t});\n\n  \t}\n\n  \telse {\n\n  \t\tlet details = {\n\n  \t\t  \"bankAccountDetailsId\": this.bank.bankAccountDetailsId,\n\t\t  \"apartmentId\": this.sessionService.apartmentId,\n\t\t  \"bankName\": this.bank.bankName,\n\t\t  \"branchName\": this.bank.branchName,\n\t\t  \"accountNumber\": this.bank.accountNumber,\n\t\t  \"accountHolderName\": this.bank.accountHolderName,\n\t\t  \"ifsc\": this.bank.ifsc,\n\t\t  \"isPrimary\": this.bank.isPrimary,\n\t\t  \"isActive\": this.bank.isActive,\n\t\t  \"insertedBy\": this.bank.insertedBy,\n\t\t  \"insertedOn\": this.bank.insertedOn,\n\t\t  \"updatedBy\": parseInt(this.sessionService.userId),\n\t\t  \"updatedOn\": _moment().toISOString()\n\n\t\t}\n\n\t\tlet bankAccountDetails = {\n\t\t\tbankAccountDetails: details\n\t\t}\n\n\t\tthis.bankAccountService.updateBankAccountDetails(bankAccountDetails).subscribe((res:any) => {\n\n\t  \t\tif(res.message) {\n\n\t  \t\t\tthis.bankAccountService.getAllBankAccountDetails().subscribe((res:any) => {\n\n\t  \t\t\t\tthis.isBankSubmitted = true;\n\t  \t\t\t\tthis.isBankNew = false;\n  \t\t\t\t\tthis.isBankUpdate = false;\n\n\t\t  \t\t\tthis.isSuccess = true;\n\t\t  \t\t\tthis.sharedService.setAlertMessage(\"Bank Account Update Successfully\");\n\t\t          \t\n\t\t          \tthis.bankAccountData = res.filter(item => {\n\t                \treturn item.isActive && (item.apartmentId == this.sessionService.apartmentId);\n\t              \t});\t\n\n\t  \t\t\t});\n\n\t  \t\t\t\n\n\t  \t\t}\n\t  \t\telse {\n\n\t  \t\t\tthis.isBankSubmitted = true;\t\n\t          \tthis.isError = true;\n\t          \tthis.alertMessage = res.errorMessage;\n\t  \t\t}\n\n  \t\t});\n\n  \t}\n\n  \t\n\n  }\n\n  ngOnInit() {\n\n  \tthis.bank = {};\n\n  \tthis.bankAccountService.getAllBankAccountDetails().subscribe((res:any) => {\n\n  \t\tthis.isBankLoaded = true;\n\n  \t\tthis.bankAccountData = res.filter(item => {\n        \treturn item.isActive && (item.apartmentId == this.sessionService.apartmentId);\n        });\n\n  \t});\n\n  \t// delete account\n    this.sharedService.unitlistdeleteindexcast.subscribe( id => {\n\n      if(id != null){\n\n      \tthis.isBankLoaded = false;\n\n\t  \tvar params = {\n\t      bankAccountDetailsId: id,\n\t      deleteBy: parseInt(this.sessionService.userId)\n\t    }\n\n\t  \tthis.bankAccountService.deleteBankAccountDetails(params).subscribe((res:any) => {\n\n\t  \t  this.bankAccountData = this.bankAccountData.filter((type) => type.bankAccountDetailsId !== id);\n\t\t  this.isBankLoaded = true;\n\t\t  this.sharedService.setAlertMessage(\"Bank Account deleted\");\n          this.sharedService.setUnitListDeleteIndex(null);\n\n\t\t}, error => {\n        });\n        \n      }\n\n    });\n\n  }\n\n}\n"]}