{"version":3,"sources":["./src/app/modules/ams/roles-and-permissions/add-role/add-role.component.html","./src/app/modules/ams/roles-and-permissions/configure-roles/configure-roles.component.html","./src/app/modules/ams/roles-and-permissions/role-type-list/role-type-list.component.html","./src/app/modules/ams/roles-and-permissions/roles-and-permissions-list/roles-and-permissions-list.component.html","./src/app/modules/ams/roles-and-permissions/set-permissions/set-permissions.component.html","./src/app/modules/ams/roles-and-permissions/add-role/add-role.component.scss","./src/app/modules/ams/roles-and-permissions/add-role/add-role.component.ts","./src/app/modules/ams/roles-and-permissions/configure-roles/configure-roles.component.scss","./src/app/modules/ams/roles-and-permissions/configure-roles/configure-roles.component.ts","./src/app/modules/ams/roles-and-permissions/role-type-list/role-type-list.component.scss","./src/app/modules/ams/roles-and-permissions/role-type-list/role-type-list.component.ts","./src/app/modules/ams/roles-and-permissions/roles-and-permissions-list/roles-and-permissions-list.component.scss","./src/app/modules/ams/roles-and-permissions/roles-and-permissions-list/roles-and-permissions-list.component.ts","./src/app/modules/ams/roles-and-permissions/roles-and-permissions-routing.module.ts","./src/app/modules/ams/roles-and-permissions/roles-and-permissions.module.ts","./src/app/modules/ams/roles-and-permissions/set-permissions/set-permissions.component.scss","./src/app/modules/ams/roles-and-permissions/set-permissions/set-permissions.component.ts"],"names":[],"mappings":"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","file":"modules-ams-roles-and-permissions-roles-and-permissions-module-es2015.js","sourcesContent":["export default \"<div class=\\\"parking-create-parking-slot-wrapper\\\">\\n\\t<div class=\\\"main\\\">\\n\\t\\t<condo-message class=\\\"mb-3\\\" *ngIf=\\\"message\\\"\\n\\t\\t\\t[appearance]=\\\"message.appearance\\\"\\n\\t\\t\\t[showIcon]=\\\"message.showIcon\\\"\\n\\t\\t\\t[type]=\\\"message.type\\\"\\n\\t\\t\\t[@shake]=\\\"message.shake\\\">\\n\\t\\t\\t{{message.content}}\\n\\t\\t</condo-message>\\n\\t\\t<form #rolesForm=\\\"ngForm\\\" name=\\\"addSlotForm\\\" novalidate>\\n\\t\\t\\t<condo-card>\\n\\t\\t\\t\\t<div CondoCardHeader>\\n\\t\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t\\t<h4>\\n\\t\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"isCreate\\\">Create Roles</span>\\n\\t\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"!isCreate\\\">Edit Roles</span>\\n\\t\\t\\t\\t\\t\\t</h4>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div CondoCardBody>\\n\\t\\t\\t\\t\\t<div class=\\\"p-5\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Roles Type*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select name=\\\"roleTypeId\\\" [(ngModel)]=\\\"roleInfo.roleTypeId\\\" class=\\\"form-control\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of allRoles\\\" [ngValue]=\\\"item.value\\\">{{item?.name}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Roles Name*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"roleName\\\" [(ngModel)]=\\\"roleInfo.roleName\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Description</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea name=\\\"description\\\" [(ngModel)]=\\\"roleInfo.description\\\" cols=\\\"10\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trows=\\\"3\\\"></textarea>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12 d-flex justify-content-end\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"mr-3\\\" mat-flat-button\\n\\t\\t\\t\\t\\t\\t\\t\\trouterLink=\\\"/ams/roles-permissions/roles-type-list\\\" routerLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions]=\\\"{exact:true}\\\">Cancel</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" *ngIf=\\\"isCreate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"addRole()\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" *ngIf=\\\"!isCreate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"updateRole()\\\">Update</button>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</condo-card>\\n\\t\\t</form>\\n\\t</div>\\n</div>\";","export default \"<div class=\\\"parking-create-parking-slot-wrapper\\\">\\n\\t<div class=\\\"main\\\">\\n\\t\\t<form #rolesForm=\\\"ngForm\\\" name=\\\"addSlotForm\\\" novalidate>\\n\\t\\t\\t<condo-message class=\\\"mb-3\\\" *ngIf=\\\"message\\\"\\n\\t\\t\\t\\t[appearance]=\\\"message.appearance\\\"\\n\\t\\t\\t\\t[showIcon]=\\\"message.showIcon\\\"\\n\\t\\t\\t\\t[type]=\\\"message.type\\\"\\n\\t\\t\\t\\t[@shake]=\\\"message.shake\\\">\\n\\t\\t\\t\\t{{message.content}}\\n\\t\\t\\t</condo-message>\\n\\t\\t\\t<condo-card>\\n\\t\\t\\t\\t<div CondoCardHeader>\\n\\t\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h4>\\n\\t\\t\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"isCreate\\\">Create Menu Control</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"!isCreate\\\">Edit Menu Control</span>\\n\\t\\t\\t\\t\\t\\t\\t</h4>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div CondoCardBody>\\n\\t\\t\\t\\t\\t<div class=\\\"p-5\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<condo-select \\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlabelText=\\\"Role Type\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfieldPlaceholder=\\\"Select Role Type\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldList]=\\\"allRoles\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfieldValue=\\\"name\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldModel]=\\\"roleTypeId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfieldId=\\\"value\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(fieldParams)=\\\"setRoleType($event)\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t></condo-select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"roleTypeId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<condo-select \\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlabelText=\\\"{{roleTypeId == 1 ? 'Admin' : 'Staff'}} Role\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfieldPlaceholder=\\\"Select {{roleTypeId == 1 ? 'Admin' : 'Staff'}} Role\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldList]=\\\"roleList\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfieldValue=\\\"roleName\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldModel]=\\\"roleId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfieldId=\\\"roleId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(fieldParams)=\\\"setRole($event)\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t></condo-select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Menu Control Name*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"name\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<!-- <div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Description</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea name=\\\"description\\\" [(ngModel)]=\\\"description\\\" cols=\\\"10\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trows=\\\"3\\\"></textarea>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div> -->\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12 d-flex justify-content-end\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"mr-3\\\" mat-flat-button\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trouterLink=\\\"/ams/roles-permissions/role-permissions-list\\\" routerLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions]=\\\"{exact:true}\\\">Cancel</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" *ngIf=\\\"isCreate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"addRole()\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" *ngIf=\\\"!isCreate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"updateRole()\\\">Update</button>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</condo-card>\\n\\t\\t</form>\\n\\t</div>\\n</div>\";","export default \"<div class=\\\"parking-aa-unit-to-unit-allocation-wrapper\\\">\\n\\t<div class=\\\"main\\\">\\n\\t\\t<app-loader *ngIf=\\\"!isShowRoleList\\\"></app-loader>\\n\\t\\t<condo-card *ngIf=\\\"isShowRoleList\\\">\\n\\t\\t\\t<div CondoCardHeader>\\n\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"d-flex align-items-center\\\">\\n\\t\\t\\t\\t\\t\\t<h4>Roles for Staff & Admin</h4>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"ml-auto mr-3\\\">\\n\\t\\t\\t\\t\\t\\t<app-table-search [input]=\\\"roleTypeSearch\\\" (outputParams)=\\\"onGlSearchFilter($event)\\\"></app-table-search>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"mr-3\\\">\\n\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" href=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t\\t\\trouterLink=\\\"/ams/roles-permissions/role-type\\\" routerLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions]=\\\"{exact:true}\\\">Create Role</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div CondoCardBody>\\n\\t\\t\\t\\t<jqxGrid [theme]=\\\"'material'\\\" [width]=\\\"'100%'\\\" [rowsheight]=\\\"48\\\" [autoheight]=\\\"true\\\" [pageable]=\\\"true\\\"\\n\\t\\t\\t\\t\\t[filterable]=\\\"true\\\" [sortable]=\\\"true\\\" [source]=\\\"roleTypeList\\\" [columns]=\\\"roleHeader\\\"\\n\\t\\t\\t\\t\\t[columnsresize]=\\\"true\\\" [enablehover]=\\\"false\\\" #datagrid>\\n\\t\\t\\t\\t</jqxGrid>\\n\\t\\t\\t</div>\\n\\t\\t</condo-card>\\n\\t</div>\\n</div>\";","export default \"<div class=\\\"parking-aa-unit-to-unit-allocation-wrapper\\\">\\n\\t<div class=\\\"main\\\">\\n\\t\\t<app-loader *ngIf=\\\"!isShowRoleList\\\"></app-loader>\\n\\t\\t<condo-card *ngIf=\\\"isShowRoleList\\\">\\n\\t\\t\\t<div CondoCardHeader>\\n\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"d-flex align-items-center\\\">\\n\\t\\t\\t\\t\\t\\t<h4>Roles And Permissions</h4>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"ml-auto mr-3\\\">\\n\\t\\t\\t\\t\\t\\t<app-table-search [input]=\\\"roleSearch\\\" (outputParams)=\\\"onGlSearchFilter($event)\\\"></app-table-search>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"mr-3\\\">\\n\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" href=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t\\t\\t\\trouterLink=\\\"/ams/roles-permissions/configure-roles\\\" routerLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions]=\\\"{exact:true}\\\">Add Menu Control</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div CondoCardBody>\\n\\t\\t\\t\\t<jqxGrid [theme]=\\\"'material'\\\" [width]=\\\"'100%'\\\" [rowsheight]=\\\"48\\\" [autoheight]=\\\"true\\\" [pageable]=\\\"true\\\"\\n\\t\\t\\t\\t\\t[filterable]=\\\"true\\\" [sortable]=\\\"true\\\" [source]=\\\"roleList\\\" [columns]=\\\"roleHeader\\\"\\n\\t\\t\\t\\t\\t[columnsresize]=\\\"true\\\" [enablehover]=\\\"false\\\" #datagrid>\\n\\t\\t\\t\\t</jqxGrid>\\n\\t\\t\\t</div>\\n\\t\\t</condo-card>\\n\\t</div>\\n</div>\";","export default \"<div class=\\\"parking-create-parking-slot-wrapper\\\">\\n    <div class=\\\"main\\\">\\n        <condo-card>\\n            <div CondoCardHeader>\\n                <div class=\\\"d-flex\\\">\\n                    <div>\\n                        <h4>Set Permissions</h4>\\n                        <p>{{menuList.length}} results</p>\\n                    </div>\\n                    <div class=\\\"ml-auto d-none d-md-block mr-3\\\">\\n                        <button mat-flat-button \\n                        routerLink=\\\"/ams/roles-permissions/role-permissions-list\\\" \\n\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">Back to Role List</button>\\n                    </div>\\n                </div>\\n            </div>\\n            <div CondoCardBody>\\n                <app-loader *ngIf=\\\"!isDataLoaded\\\" ></app-loader>\\n                <div class=\\\"p-5\\\" *ngIf=\\\"isDataLoaded\\\" > \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-4 col-lg-4 col-sm-6 col-xs-6\\\">\\n                            <h5 class=\\\"mb-4\\\">Menu</h5>\\n                            <mat-selection-list #menu [multiple]=\\\"false\\\" (selectionChange)=\\\"changeMenu($event)\\\">\\n                                <mat-list-option *ngFor=\\\"let item of menuList;let i=index\\\" [value]=\\\"item\\\"\\n                                    [selected]=\\\"item.menuName === selectedMenuName\\\">\\n                                    <!-- <div class=\\\"form-check recur-check float-left\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"{{item}}\\\" name=\\\"{{item}}\\\" checked>\\n                                        <label class=\\\"form-check-label tiny\\\" for=\\\"{{item}}\\\">{{item}}</label>\\n                                    </div> -->\\n                                    {{item?.menuName}}\\n                                </mat-list-option>\\n                            </mat-selection-list>\\n                        </div>\\n                        <div class=\\\"col-md-4 col-lg-4 col-sm-6 col-xs-6\\\">\\n                            <h5 class=\\\"mb-4\\\">Sub-Menu</h5>\\n                            <mat-selection-list #submenu [multiple]=\\\"false\\\" (selectionChange)=\\\"changeSubMenu($event)\\\">\\n                                <mat-list-option *ngFor=\\\"let item of subMenuList\\\" [value]=\\\"item\\\"\\n                                    [selected]=\\\"item.subMenuName === selectedSubMenuName\\\">\\n                                    <!-- <div class=\\\"form-check recur-check float-left\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"{{item}}\\\" name=\\\"{{item}}\\\">\\n                                        <label class=\\\"form-check-label tiny\\\" for=\\\"{{item}}\\\">{{item}}</label>\\n                                    </div> -->\\n                                    {{item?.subMenuName}}\\n                                </mat-list-option>\\n                            </mat-selection-list>\\n                        </div>\\n                        <div class=\\\"col-md-4 col-lg-4 col-sm-6 col-xs-6\\\" *ngIf=\\\"actionList && actionList.length\\\">\\n                            <h5 class=\\\"mb-4\\\">Action</h5>\\n                            <!-- Temporary Solution -->\\n                            <mat-selection-list #menuActions (selectionChange)=\\\"changeActions($event)\\\">\\n                                <mat-list-option [selected]=\\\"isEnabled\\\" [value]=\\\"actionList\\\">\\n                                    Enable  \\n                                </mat-list-option>\\n                            </mat-selection-list>\\n\\n                            <!-- Permanent Solution -->\\n\\n                            <!-- <mat-selection-list #menuActions (selectionChange)=\\\"changeActions($event)\\\">\\n                                <mat-list-option *ngFor=\\\"let item of actionList\\\" [selected]=\\\"item.checked\\\"\\n                                    [value]=\\\"item\\\">\\n                                    {{item?.name | uppercase}}\\n                                </mat-list-option>\\n                            </mat-selection-list> -->\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </condo-card>\\n    </div>\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3JvbGVzLWFuZC1wZXJtaXNzaW9ucy9hZGQtcm9sZS9hZGQtcm9sZS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild, ChangeDetectorRef, ViewEncapsulation } from '@angular/core';\nimport { UserService } from 'src/app/api/controllers/User';\nimport { ScreenService } from 'src/app/api/controllers/Screen';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { SharedService } from 'src/app/shared/services/shared.service';\n\nimport * as moment from 'moment';\nimport _moment from \"moment-timezone\";\nimport { CondoAnimations } from 'src/@condo/animations';\n\n@Component({\n  selector: 'app-add-role',\n  templateUrl: './add-role.component.html',\n  styleUrls: ['./add-role.component.scss'],\n  encapsulation  : ViewEncapsulation.None,\n  animations   : CondoAnimations\n})\nexport class AddRoleComponent implements OnInit {\n  @ViewChild('rolesForm') form:any;\n  allRoles: Array<any> = [];\n  isCreate:boolean=true;\n  roleInfo:any = {};\n  message:any = null;\n  constructor(private userService: UserService,\n    private router: Router,\n    private activatedRoute : ActivatedRoute,\n    private sessionService : SessionService,\n    private sharedService : SharedService,\n    private _changeDetectorRef: ChangeDetectorRef\n  ) { }\n\n  addRole() {\n    this.message = null;\n    if(!this.form.valid){\n      window.scroll({\n        top: 0,\n        behavior: 'smooth'\n      });\n      // Show the validation message\n      this.message = {\n        appearance: 'outline',\n        content   : \"Fill the Required Fields\",\n        shake     : true,\n        showIcon  : true,\n        type      : 'error'\n      };\n      //Mark for check\n      this._changeDetectorRef.markForCheck();\n    } else {\n      let addRoleParam = {\n        \"roleId\": 0,\n        \"apartmentId\": this.sessionService.apartmentId,\n        \"roleName\": this.roleInfo.roleName,\n        \"description\": this.roleInfo.description,\n        \"isActive\": true,\n        \"insertedBy\": this.sessionService.userId,\n        \"insertedOn\": _moment().toISOString(),\n        \"updatedBy\": null,\n        \"updatedOn\": null,\n        \"roleTypeId\": this.roleInfo.roleTypeId\n      }\n      let roleParam = {\n        role: addRoleParam\n      }\n      this.userService.addRole(roleParam).subscribe((resp:any) => {\n        if(resp.message) {\n          this.router.navigate(['roles-type-list'],{relativeTo:this.activatedRoute.parent})\n          this.sharedService.openSnackBar('Role Added Successfully','success');\n        } else \n          this.sharedService.openSnackBar(resp.errorMessage,'error');\n      },(error)=>{\n        this.sharedService.openSnackBar('Server Error','error');\n      })\n    }\n  }\n\n  updateRole() {\n    this.message = null;\n    if(!this.form.valid) {\n      window.scroll({\n        top: 0,\n        behavior: 'smooth'\n      });\n      // Show the validation message\n      this.message = {\n        appearance: 'outline',\n        content   : \"Fill the Required Fields\",\n        shake     : true,\n        showIcon  : true,\n        type      : 'error'\n      };\n      //Mark for check\n      this._changeDetectorRef.markForCheck();\n    } else {\n      let addRoleParam = {\n        \"roleId\":  this.roleInfo.roleId,\n        \"apartmentId\": this.sessionService.apartmentId,\n        \"roleName\": this.roleInfo.roleName,\n        \"description\": this.roleInfo.description,\n        \"isActive\": true,\n        \"insertedBy\": this.roleInfo.insertedBy,\n        \"insertedOn\": this.roleInfo.insertedOn,\n        \"updatedBy\": this.sessionService.userId,\n        \"updatedOn\": _moment().toISOString(),\n        \"roleTypeId\": this.roleInfo.roleTypeId\n      }\n      let roleParam = {\n        role: addRoleParam\n      }\n      this.userService.updateRole(roleParam).subscribe((resp:any) => {\n        if(resp.message) {\n          this.router.navigate(['roles-type-list'],{relativeTo:this.activatedRoute.parent})\n          this.sharedService.openSnackBar(resp.message,'success');\n        } else \n          this.sharedService.openSnackBar(resp.errorMessage,'error');\n      },(error)=>{\n        this.sharedService.openSnackBar('Server Error','error');\n      })\n    }\n  }\n\n  ngOnInit(): void {\n    if (this.activatedRoute.params['value'].id != undefined) {\n      this.isCreate = false;\n      let queryParamBase = {\n        roleId: this.activatedRoute.params['value'].id\n      };\n      this.userService.getRoleByRoleId(queryParamBase).subscribe(resp =>{\n        this.roleInfo = resp[0];\n      })\n    }\n    this.userService.getAllRoleTypes().subscribe((resp: any) => {\n      if(Array.isArray(resp)) {\n        this.allRoles = resp.filter(data => {\n          if (data.value == 1 || data.value == 3) {\n            return data;\n          }\n        })\n      }\n    })\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3JvbGVzLWFuZC1wZXJtaXNzaW9ucy9jb25maWd1cmUtcm9sZXMvY29uZmlndXJlLXJvbGVzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ChangeDetectorRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ScreenService } from 'src/app/api/controllers/Screen';\nimport { UserService } from 'src/app/api/controllers/User';\nimport { SessionService } from 'src/app/core/session/session.service';\n\nimport * as moment from 'moment';\nimport _moment from \"moment-timezone\";\nimport { CondoAnimations } from 'src/@condo/animations';\nimport { SharedService } from 'src/app/shared/services/shared.service';\n\n@Component({\n  selector: 'app-configure-roles',\n  templateUrl: './configure-roles.component.html',\n  styleUrls: ['./configure-roles.component.scss'],\n  encapsulation  : ViewEncapsulation.None,\n  animations   : CondoAnimations\n})\nexport class ConfigureRolesComponent implements OnInit {\n  @ViewChild('rolesForm') form:any;\n  allRoles: Array<any> = [];\n  roleList:any = [];\n  roleTypeId: number;\n  roleId:number;\n  name: any;\n  description: any;\n  menuRoleSecLevelId:any;\n  isCreate:boolean=true;\n  menuRole:any;\n  message:any = null;\n  constructor(private userService: UserService,\n    private router: Router,\n    private activatedRoute : ActivatedRoute,\n    private sessionService : SessionService,\n    private sharedService : SharedService,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private screenService: ScreenService) { }\n\n  setRoleType(event) {\n    this.roleId = null;\n    this.roleTypeId = event[0].value;\n    this.getRoleList();\n  }\n\n  getRoleList() {\n    //Admin Role Type\n    var paramsRoles = {\n      RoleTypeId: this.roleTypeId,\n      ApartmentId: this.sessionService.apartmentId\n    }\n    this.userService.getAllRolesByRoleTypeIdByApartmentId(paramsRoles).subscribe((res: any) => {\n      this.roleList = res;\n    });\n  }\n\n  setRole(event) {\n    this.roleId = event[0].roleId;\n  }\n\n  addRole() {\n    this.message = null;\n    if(!this.form.valid){\n      window.scroll({\n        top: 0,\n        behavior: 'smooth'\n      });\n      // Show the validation message\n      this.message = {\n        appearance: 'outline',\n        content   : \"Fill the Required Fields\",\n        shake     : true,\n        showIcon  : true,\n        type      : 'error'\n      };\n      //Mark for check\n      this._changeDetectorRef.markForCheck();\n    } else {\n      let addMenuLevelParam = {\n        \"menuSecLevelId\": 0,\n        \"apartmentId\": this.sessionService.apartmentId,\n        \"name\": this.name,\n        \"isActive\": true,\n        \"insertedBy\": this.sessionService.userId,\n        \"insertedOn\": _moment().toISOString(),\n        \"updatedBy\": null,\n        \"updatedOn\": null\n      }\n      let secLevelParam = {\n        seclevel: addMenuLevelParam\n      }\n      this.screenService.addMenuSecLevel(secLevelParam).subscribe((resp:any) => {\n        if (resp && resp.message) {\n          let addMenuRoleSecLevel = {\n            \"menuRoleSecLevelId\": 0,\n            \"apartmentId\": this.sessionService.apartmentId,\n            \"roleId\": this.roleId,\n            \"secLevelId\": resp.message,\n            \"isActive\": true,\n            \"insertedBy\": this.sessionService.userId,\n            \"insertedOn\": _moment().toISOString(),\n            \"updatedBy\": null,\n            \"updatedOn\": null\n          }\n          let roleSecLevelParam = {\n            roleseclevel: addMenuRoleSecLevel\n          }\n          this.screenService.addMenuRoleSecLevel(roleSecLevelParam).subscribe((resp:any) => {\n            if(resp.message) {\n              this.sharedService.openSnackBar('Menu Control Added Successfully','success');\n              this.router.navigate(['/ams/roles-permissions/role-permissions-list']);\n            } else {\n              this.sharedService.openSnackBar(resp.errorMessage,'error')\n            }\n          },(error)=>{\n            this.sharedService.openSnackBar('Server Error','error');\n          })\n        }\n      })\n    }\n  }\n\n  updateRole(){\n    this.message = null;\n    if(!this.form.valid){\n      window.scroll({\n        top: 0,\n        behavior: 'smooth'\n      });\n      // Show the validation message\n      this.message = {\n        appearance: 'outline',\n        content   : \"Fill the Required Fields\",\n        shake     : true,\n        showIcon  : true,\n        type      : 'error'\n      };\n      //Mark for check\n      this._changeDetectorRef.markForCheck();\n    } else {\n      let updataParam = {\n        \"menuSecLevelId\": this.menuRole.secLevelId,\n        \"apartmentId\":  this.sessionService.apartmentId,\n        \"name\": this.name,\n        \"isActive\": true,\n        \"insertedBy\": this.menuRole.insertedBy,\n        \"insertedOn\": this.menuRole.insertedOn,\n        \"updatedBy\": this.sessionService.userId,\n        \"updatedOn\": _moment().toISOString()\n      }\n      let updateRoleParam = {\n        menuSecLevel : updataParam\n      }\n      this.screenService.updateMenuSecLevel(updateRoleParam).subscribe((resp:any) =>{\n        if(resp.message) {\n          this.sharedService.openSnackBar('Menu Control Updated','success');\n          this.router.navigate(['/ams/roles-permissions/role-permissions-list']);\n        } else {\n          this.sharedService.openSnackBar(resp.errorMessage,'error')\n        }\n      },(error)=>{\n        this.sharedService.openSnackBar('Server Error','error');\n      })\n    }\n  }\n\n  ngOnInit(): void {\n    if (this.activatedRoute.params['value'].id != undefined) {\n      this.menuRoleSecLevelId = this.activatedRoute.params['value'].id;\n      this.isCreate = false;\n      let queryParamBase = {\n        apartmentId: this.sessionService.apartmentId,\n        menuRoleSecLevelId: this.menuRoleSecLevelId,\n      };\n      this.screenService.getMenuRoleSecLevelbyRoleSecLevelId(queryParamBase).subscribe(resp =>{\n        this.menuRole = resp[0];\n        this.roleId = this.menuRole.roleId;\n        this.name = this.menuRole.secLevelName;\n        this.roleTypeId = this.menuRole.roleTypeId;\n        this.getRoleList();\n      })\n    }\n    this.userService.getAllRoleTypes().subscribe((resp: any) => {\n      if(Array.isArray(resp)) {\n        this.allRoles = resp.filter(data => {\n          if (data.value == 1 || data.value == 3) {\n            return data;\n          }\n        })\n      }\n    })\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3JvbGVzLWFuZC1wZXJtaXNzaW9ucy9yb2xlLXR5cGUtbGlzdC9yb2xlLXR5cGUtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import { HostListener, Injector, ViewChild } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ScreenService } from 'src/app/api/controllers/Screen';\nimport { UserService } from 'src/app/api/controllers/User';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\nimport { ModalService } from 'src/app/shared/services/modal.service';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-role-type-list',\n  templateUrl: './role-type-list.component.html',\n  styleUrls: ['./role-type-list.component.scss']\n})\nexport class RoleTypeListComponent implements OnInit {\n\n  public roleHeader: Array<any> = [];\n  public roleTypeList: any;\n  public isEnableCreate: boolean = true;\n  modalService: any;\n  isShowRoleList:boolean=false;\n  roleTypeSearch:string = '';\n  apiSubscribe:Subscription;\n\n  constructor(private router: Router,\n    private userService: UserService,\n    private sharedService: SharedService,\n    private sessionService: SessionService,\n    private injector: Injector) {\n    this.modalService = this.injector.get(ModalService);\n  }\n\n  @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n  @HostListener('window:onEditRole', ['$event.detail'])\n  onEditRole(detail) {\n    let dataRecord = this.datagrid.getrowdata(detail.rowId);\n    let roleId = dataRecord.roleId;\n    this.router.navigateByUrl('/ams/roles-permissions/edit-role-type/' + roleId);\n  }\n\n  @HostListener('window:onDeleteRole', ['$event.detail'])\n  onDeleteRole(detail) {\n    let dataRecord = this.datagrid.getrowdata(detail.rowId)\n    let roleId = dataRecord.roleId\n    this.modalService.showConfirmModal(roleId);\n  }\n\n  onGlSearchFilter(event) {\n    if(event != \"\"){\n      let filtergroup = new jqx.filter();\n      let filter_or_operator = 1;\n      let filtervalue = event;\n      let filtercondition = 'contains';\n      let filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n      filtergroup.operator = 'or';\n      filtergroup.addfilter(filter_or_operator, filterData);\n      this.datagrid.showfiltercolumnbackground(false);\n      this.roleHeader.forEach(item => {\n        if(item.datafield != 'Actions') {\n          this.datagrid.addfilter(item.datafield, filtergroup, true);\n        }\n      })\n      this.datagrid.applyfilters();\n    }\n    else {\n      this.datagrid.clearfilters();\n    }\n  }\n\n  getRolePermissionList() {\n    this.isShowRoleList = false;\n    let param = {\n      ApartmentId: this.sessionService.apartmentId,\n      roleTypeIDs: '1,3,5',\n    }\n    this.userService.getAllRolesbyMultipleRoleTypeId(param).subscribe((resp: any) => {\n      let refMenuData = resp.filter(data => {\n        return data.isActive\n      });\n      let gridSourceData = {\n        localdata: refMenuData,\n        datatype: \"array\"\n      }\n      this.roleTypeList = new jqx.dataAdapter(gridSourceData);\n      this.isShowRoleList = true;\n      this.isEnableCreate = true;\n    })\n  }\n\n  ngOnInit(): void {\n    this.getRolePermissionList();\n    var cellsrenderer = (row, column, value) => {\n      return '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n    }\n    var columnrenderer = (value) => {\n      return '<div style=\"padding: 14px\">' + value + '</div>';\n    }\n    this.roleHeader = [{\n        text: 'Role Type',\n        datafield: 'roleTypeName',\n        cellsrenderer: cellsrenderer,\n        renderer: columnrenderer,\n        minwidth: 120\n      },{\n        text: 'role name',\n        datafield: 'roleName',\n        cellsrenderer: cellsrenderer,\n        renderer: columnrenderer,\n        minwidth: 120\n      }, {\n        text: 'description',\n        datafield: 'description',\n        cellsrenderer: cellsrenderer,\n        renderer: columnrenderer,\n        minwidth: 120\n      },{\n        text: 'action',\n        datafield: 'roleTypeId',\n        cellsalign: 'center',\n        align: 'center',\n        width: 120,\n        cellsrenderer: (row,column,value): string => {\n          if(value != 5) {\n          \n            return '<div class=\"simple-actions\"><a href=\"javascript:void(0)\" class=\"mr-2\" onClick=\"onEditRole(' + row + ')\"><i class=\"fa fa-pencil icon edit\" aria-hidden=\"true\"></i></a>'\n            +'<a href=\"javascript:void(0)\" class=\"mr-2\" onClick=\"onDeleteRole(' + row + ')\"><i class=\"fa fa-trash icon delete\" aria-hidden=\"true\"></i></a>'\n            +'</div>'\n          } else {\n            return ''\n          }\n        },\n        renderer: columnrenderer\n    }];\n   \n    this.apiSubscribe = this.sharedService.unitlistdeleteindexcast.subscribe(id => {\n      if (id != null) {\n        var params = {\n          roleId: id,\n          deleteBy: this.sessionService.userId,\n        }\n        this.userService.deleteRole(params).subscribe((res: any) => {\n          this.sharedService.setUnitListDeleteIndex(null);\n          if(res.message) {\n            this.getRolePermissionList();\n            this.sharedService.openSnackBar('Role deleted Successfully','success');\n          } else {\n            this.sharedService.openSnackBar(res.errorMessage,'error');\n          }\n        }, error => {\n          this.sharedService.setUnitListDeleteIndex(null);\n          this.sharedService.openSnackBar('Server Error','error');\n        });\n      }\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.apiSubscribe.unsubscribe();\n  }\n\n}\n\nfunction onEditRole(row) {\n  var event = new CustomEvent('onEditRole', {\n    detail: {\n      rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).onEditRole = onEditRole;\n\nfunction onDeleteRole(row) {\n  var event = new CustomEvent('onDeleteRole', {\n    detail: {\n      rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).onDeleteRole = onDeleteRole;\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3JvbGVzLWFuZC1wZXJtaXNzaW9ucy9yb2xlcy1hbmQtcGVybWlzc2lvbnMtbGlzdC9yb2xlcy1hbmQtcGVybWlzc2lvbnMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild, HostListener, Injector } from '@angular/core';\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ScreenService } from 'src/app/api/controllers/Screen';\nimport { ModalService } from 'src/app/shared/services/modal.service';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-roles-and-permissions-list',\n  templateUrl: './roles-and-permissions-list.component.html',\n  styleUrls: ['./roles-and-permissions-list.component.scss']\n})\nexport class RolesAndPermissionsListComponent implements OnInit {\n  @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n  public roleHeader: Array<any> = [];\n  public roleList: any;\n  public isEnableCreate: boolean = true;\n  modalService: any;\n  isShowRoleList:boolean=false;\n  roleSearch:string = '';\n  apiSubscribe:Subscription;\n \n  constructor(private router: Router,\n    private screenService: ScreenService,\n    private sharedService: SharedService,\n    private sessionService: SessionService,\n    private injector: Injector) {\n    this.modalService = this.injector.get(ModalService);\n  }\n\n  onGlSearchFilter(event) {\n    if(event != \"\"){\n      let filtergroup = new jqx.filter();\n      let filter_or_operator = 1;\n      let filtervalue = event;\n      let filtercondition = 'contains';\n      let filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n      filtergroup.operator = 'or';\n      filtergroup.addfilter(filter_or_operator, filterData);\n      this.datagrid.showfiltercolumnbackground(false);\n      this.roleHeader.forEach(item => {\n        if(item.datafield != 'Actions') {\n          this.datagrid.addfilter(item.datafield, filtergroup, true);\n        }\n      })\n      this.datagrid.applyfilters();\n    }\n    else {\n      this.datagrid.clearfilters();\n    }\n  }\n\n  @HostListener('window:navigateToPermission',['$event.detail'])\n  navigateToPermission(detail) {\n    let dataRecord = this.datagrid.getrowdata(detail.rowId)\n    this.router.navigate(['/ams/roles-permissions/set-permission'],{queryParams:{ secLevelId: dataRecord.secLevelId, roleId: dataRecord.roleId}});\n  }\n  @HostListener('window:onEditRole', ['$event.detail'])\n  onEditRole(detail) {\n    let dataRecord = this.datagrid.getrowdata(detail.rowId);\n    let menuRoleSecLevelId = dataRecord.menuRoleSecLevelId;\n    this.router.navigateByUrl('/ams/roles-permissions/edit-configure-roles/' + menuRoleSecLevelId);\n  }\n  @HostListener('window:onDeleteRole', ['$event.detail'])\n  onDeleteRole(detail) {\n    let dataRecord = this.datagrid.getrowdata(detail.rowId)\n    let menuRoleSecLevelId = dataRecord.menuRoleSecLevelId\n    this.modalService.showConfirmModal(menuRoleSecLevelId);\n  }\n\n  getRolePermissionList() {\n    this.isShowRoleList = false;\n    let param = {\n      apartmentId: this.sessionService.apartmentId\n    }\n    this.screenService.getAllDefaultMenuRoleSecLevelbyApartmentId(param).subscribe(\n      (resp: any) => {\n        let refMenuData = resp.filter(data => {\n          return data.isActive\n        });\n        let gridSourceData = {\n          localdata: refMenuData,\n          datatype: \"array\"\n\n        }\n        this.roleList = new jqx.dataAdapter(gridSourceData);\n        this.isShowRoleList = true;\n        this.isEnableCreate = true;\n      }\n    )\n  }\n\n  ngOnInit(): void {\n    var cellsrenderer = (row, column, value) => {\n      return '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n    }\n    var columnrenderer = (value) => {\n      return '<div style=\"padding: 14px\">' + value + '</div>';\n    }\n    this.roleHeader = [{\n      text: 'role name',\n      datafield: 'roleName',\n      cellsrenderer: cellsrenderer,\n      renderer: columnrenderer,\n      minwidth: 120\n    }, {\n      text: 'menu control name',\n      datafield: 'secLevelName',\n      cellsrenderer: cellsrenderer,\n      renderer: columnrenderer,\n      minwidth: 120\n    }, {\n      text: 'set permission',\n      cellsalign: 'center',\n      align: 'center',\n      width: 200,\n      cellsrenderer: (row): string => {\n        return '<div class=\"simple-actions\"><a href=\"javascript:void(0)\" onClick=\"navigateToPermission(' + row + ')\" class=\"btn mat-primary\">Set Permissions</a></div>'\n      },\n      renderer: columnrenderer\n    },\n    {\n      text: 'action',\n      cellsalign: 'center',\n      align: 'center',\n      width: 120,\n      cellsrenderer: (row): string => {\n        return '<div class=\"simple-actions\"><a href=\"javascript:void(0)\" class=\"mr-2\" onClick=\"onEditRole(' + row + ')\"><i class=\"fa fa-pencil icon edit\" aria-hidden=\"true\"></i></a><a href=\"javascript:void(0)\" class=\"mr-2\" onClick=\"onDeleteRole(' + row + ')\"><i class=\"fa fa-trash icon delete\" aria-hidden=\"true\"></i></a></div>'\n      },\n      renderer: columnrenderer\n    }];\n    // delete item\n    this.apiSubscribe = this.sharedService.unitlistdeleteindexcast.subscribe(id => {\n\n      if (id != null) {\n\n        var params = {\n          menuRoleSecLevelId: id,\n          deleteBy: parseInt(this.sessionService.userId)\n        }\n\n        this.screenService.deleteMenuRoleSecLevel(params).subscribe((res: any) => {\n          this.sharedService.setUnitListDeleteIndex(null);\n          if(res.message) {\n            this.getRolePermissionList();\n            this.sharedService.openSnackBar(res.message,'success');\n          } else {\n            this.sharedService.openSnackBar(res.errorMessage,'error');\n          }\n        }, error => {\n          this.sharedService.setUnitListDeleteIndex(null);\n          this.sharedService.openSnackBar('Server Error','error')\n        });\n\n\n      }\n\n    })\n    this.getRolePermissionList();\n  }\n\n  ngOnDestroy(){\n    this.apiSubscribe.unsubscribe();\n  }\n}\n\nfunction navigateToPermission(row) {\n  var event = new CustomEvent('navigateToPermission', {\n    detail: {\n      rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).navigateToPermission = navigateToPermission;\n\nfunction onEditRole(row) {\n  var event = new CustomEvent('onEditRole', {\n    detail: {\n      rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).onEditRole = onEditRole;\n\nfunction onDeleteRole(row) {\n  var event = new CustomEvent('onDeleteRole', {\n    detail: {\n      rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).onDeleteRole = onDeleteRole;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddRoleComponent } from './add-role/add-role.component';\nimport { ConfigureRolesComponent } from './configure-roles/configure-roles.component';\nimport { RoleTypeListComponent } from './role-type-list/role-type-list.component';\nimport { RolesAndPermissionsListComponent } from './roles-and-permissions-list/roles-and-permissions-list.component';\nimport { SetPermissionsComponent } from './set-permissions/set-permissions.component';\n\n\n\n\nconst routes: Routes = [\n\t{ path: '', redirectTo: 'roles-permissions-list', pathMatch: 'full'},\n\t{ path: 'roles-permissions-list', component: RolesAndPermissionsListComponent},\n\t{ path: 'roles-type-list', component: RoleTypeListComponent},\n\t{ path: 'set-permission', component: SetPermissionsComponent},\n\t{ path: 'role-type', component: AddRoleComponent},\n\t{ path: 'edit-role-type/:id', component: AddRoleComponent},\n\t{ path: 'configure-roles', component: ConfigureRolesComponent},\n\t{ path: 'edit-configure-roles/:id', component: ConfigureRolesComponent},\n\t{ path: '**', redirectTo: 'roles-permissions-list', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RolesAndPermissionsRouting { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RolesAndPermissionsListComponent } from './roles-and-permissions-list/roles-and-permissions-list.component';\nimport { SetPermissionsComponent } from './set-permissions/set-permissions.component';\nimport { RolesAndPermissionsRouting } from './roles-and-permissions-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport {MatListModule} from '@angular/material/list';\nimport { CondoCardModule } from 'src/app/modules/ui/card/card.module';\nimport { AddRoleComponent } from './add-role/add-role.component';\nimport { ConfigureRolesComponent } from './configure-roles/configure-roles.component';\nimport { RoleTypeListComponent } from './role-type-list/role-type-list.component';\nimport { SelectModule } from 'src/app/modules/ui/select/select.module';\n\nimport { CondoMessageModule } from 'src/app/modules/ui/message/message.module';\n\n\n\n@NgModule({\n  declarations: [RolesAndPermissionsListComponent, SetPermissionsComponent,AddRoleComponent, ConfigureRolesComponent, RoleTypeListComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    MatListModule,\n    CondoCardModule,\n    SelectModule,\n    CondoMessageModule,\n    RolesAndPermissionsRouting\n  ]\n})\nexport class RolesAndPermissionsModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3JvbGVzLWFuZC1wZXJtaXNzaW9ucy9zZXQtcGVybWlzc2lvbnMvc2V0LXBlcm1pc3Npb25zLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { ScreenService } from 'src/app/api/controllers/Screen';\nimport { ActivatedRoute } from '@angular/router';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { forkJoin } from 'rxjs';\n\n@Component({\n  selector: 'app-set-permissions',\n  templateUrl: './set-permissions.component.html',\n  styleUrls: ['./set-permissions.component.scss']\n})\nexport class SetPermissionsComponent implements OnInit {\n\n  public menuList: Array<any> = [];\n  public subMenuList: any;\n  public actionList: any;\n  public selectedMenuName: any;\n  public selectedSubMenuName: any;\n  public actions: any;\n  public secLevelId: any;\n  public roleId: any;\n  public isDataLoaded: boolean = false;\n  isEnabled:boolean = false;\n\n  constructor(private screenService: ScreenService,\n    private sharedService: SharedService,\n    private activatedRoute: ActivatedRoute,\n    private changeDetection: ChangeDetectorRef,\n    private sessionService: SessionService) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe(params => {\n      this.secLevelId = params['secLevelId'];\n      this.roleId = params['roleId'];\n      this.getScreenList();\n    });\n    this.actionList = [\n      {\n        name: 'add',\n        functionId: 0,\n        checked: false\n      },\n      {\n        name: 'edit',\n        functionId: 0,\n        checked: false\n      },\n      {\n        name: 'display',\n        functionId: 0,\n        checked: false\n      },\n      {\n        name: 'delete',\n        functionId: 0,\n        checked: false\n      }\n    ]\n  }\n\n  getScreenList() {\n    this.isDataLoaded = false;\n    let queryParamBase = {\n      ApartmentId: this.sessionService.apartmentId,\n      RoleId: parseInt(this.roleId),\n      secLevelId: parseInt(this.secLevelId)\n    };\n    this.screenService.getMenuFunctionByRoleIdMultiFilter(queryParamBase).subscribe(\n      (resp: any) => {\n        this.menuList = resp.responseData.value;\n        if (this.menuList && this.menuList.length) {\n          this.selectedMenuName = this.menuList[0].menuName;\n          this.changeMenu('');\n        }\n        this.isDataLoaded = true;\n      }\n    )\n  }\n\n  changeMenu(event) {\n    if (event) {\n      this.selectedMenuName = event.option.value ? event.option.value.menuName : '';\n    }\n    if (this.selectedMenuName) {\n      this.menuList.filter(key => {\n        if (key.menuName == this.selectedMenuName) {\n          this.subMenuList = [...key.subMenuNames];\n          this.selectedSubMenuName = this.subMenuList.length ? this.subMenuList[0].subMenuName : '';\n          this.changeSubMenu('')\n        }\n      })\n    }\n  }\n  changeSubMenu(event) {\n    if (event) {\n      this.actions = event.option.value ? event.option.value.actions : {};\n      this.mapActions();\n    } else {\n      this.subMenuList.filter(key => {\n        if (this.selectedSubMenuName == key.subMenuName) {\n          this.actions = {...key.actions};\n          this.mapActions();\n        }\n      })\n    }\n  }\n\n  mapActions() {\n    this.actionList[0].functionId = this.actions.add_FunctionId;\n    this.actionList[1].functionId = this.actions.edit_FunctionId;\n    this.actionList[2].functionId = this.actions.display_FunctionId;\n    this.actionList[3].functionId = this.actions.delete_FunctionId;\n    this.actionList[0].checked = this.actions.add;\n    this.actionList[1].checked = this.actions.edit;\n    this.actionList[2].checked = this.actions.display;\n    this.actionList[3].checked = this.actions.delete;\n\n    //Temporary Solution\n    this.isEnabled  = this.actionList.every((data)=> data.checked);\n  }\n\n  changeActions(event) {\n    let isActive = event.option._selected;\n    this.isDataLoaded = false;\n    let multipleApiCall:any = [];\n    this.actionList.forEach((data)=>{\n      if(data.functionId != 0) {\n        let queryParamBase = {\n          apartmentId: this.sessionService.apartmentId,\n          menuSecLevelFunctionId: data.functionId,\n          isActive: isActive,\n          updatedBy: this.sessionService.roleId,\n        };\n        multipleApiCall.push(this.screenService.updateMenuSecLevelFunctionMapping(queryParamBase));\n      }\n    })\n    forkJoin(...multipleApiCall).subscribe((res)=>{\n      let success:boolean\n      success = res.every((data)=> {\n        if(data.message)\n          return true\n        else\n         return false\n      });\n      if(success) {\n        this.changeDetection.detectChanges();\n        let operation = ['add','edit','display','delete'];\n        for (let menu of this.menuList) {\n          if(menu.menuName == this.selectedMenuName) {\n            for(let submenu of menu.subMenuNames) {\n              if(submenu.subMenuName == this.selectedSubMenuName) {\n                for(let key in submenu.actions) {\n                  if(operation.includes(key)) {\n                    submenu.actions[key] = isActive;\n                  }\n                }\n              }\n              break;\n            }\n            break;\n          }\n        }\n        this.sharedService.openSnackBar(`Permission Updated!`, 'success');\n      }\n      else \n        this.sharedService.openSnackBar(`Permission Not Updated!`, 'error')\n      this.isDataLoaded = true;\n      this.isEnabled = isActive;\n    })\n      // let queryParamBase = {\n      //   apartmentId: this.sessionService.apartmentId,\n      //   menuSecLevelFunctionId: event.option.value.functionId,\n      //   isActive: !event.option.value.checked,\n      //   updatedBy: this.sessionService.roleId,\n      // };\n      // this.screenService.updateMenuSecLevelFunctionMapping(queryParamBase).subscribe(\n      //   (resp: any) => {\n      //     this.sharedService.openSnackBar(`${event.option.value.name} Permission Updated!`, 'success')\n      //   });\n  }\n\n\n}\n"],"sourceRoot":"webpack:///"}